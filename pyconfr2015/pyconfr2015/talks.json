[{"speakers": ["Jean-Philippe Camguilhem"], "description": "Pr\u00e9s des sponsors sans qui ces jours ne seraient pas possible.", "title": "Pr\u00e9sentation", "abstract": "Pr\u00e9sentaton des sponsors \nPlatinium\n- E.I.S.T.I\n- XCG consulting\n- LEXSI\nGold\n\nYAAL\nUNLISH\nMAJERTI\nTechnopole Helioparc\nTHD", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Pr\u00e9s des sponsors sans qui ces jours ne seraient pas possible.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Pr\u00e9sentaton des sponsors </p>\n<h3>Platinium</h3>\n<p><strong>- E.I.S.T.I\n- XCG consulting\n- LEXSI</strong></p>\n<h3>Gold</h3>\n<ul>\n<li>YAAL</li>\n<li>UNLISH</li>\n<li>MAJERTI</li>\n<li>Technopole Helioparc</li>\n<li>THD</li>\n</ul></div>", "audience_level": "Novice"},
{"speakers": ["Matthieu Huin", "Fabien Boucher"], "description": "Cette pr\u00e9sentation s'adresse \u00e0 quiconque souhaitant mettre en place un syst\u00e8me d'int\u00e9gration et de d\u00e9ploiement continus pour ses propres projets. Nous partageons notre exp\u00e9rience dans ce domaine, en tant qu'utilisateurs et d\u00e9veloppeurs Python d'un environnement d'int\u00e9gration et de d\u00e9ploiement continus.", "title": "Int\u00e9gration et d\u00e9ploiement continus avec Python", "abstract": "Assurer la qualit\u00e9 du code et \u00eatre capable de le mettre en production au plus vite sont des probl\u00e9matiques cruciales dans le d\u00e9veloppement logiciel, aussi bien pour les petits projets personnels que pour les projets de grande envergure comme OpenStack. Ces probl\u00e9matiques sont connues sous les noms d'int\u00e9gration et d\u00e9ploiement continus (CI et CD) respectivement. Toutefois mettre en place un environnement de CI/CD, bien qu'essentiel, peut de prime abord sembler ardu.\nNous pr\u00e9sentons ici des outils (principalement) bas\u00e9s sur Python que nous utilisons au sein du projet Software Factory, pouss\u00e9 par Red Hat. Software Factory est une suite logicielle libre \"all in one\" de gestion de code collaborative, couvrant les besoins de bout en bout du cycle de vie du code:\n\ngestion de projet, des sprints de d\u00e9veloppement et des tickets avec Redmine\ngestion des versions et revue du code avec Git et Gerrit\ngestion des tests automatis\u00e9s avec Jenkins\ngestion de l'int\u00e9gration et du d\u00e9ploiement continus avec Zuul\noutils collaboratifs: etherpad, paste\n\nNous avons automatis\u00e9 et simplifi\u00e9 le d\u00e9ploiement et la gestion de ces composants, permettant ainsi de mettre en place un environnement de d\u00e9veloppement propice \u00e0 l'int\u00e9gration et au d\u00e9ploiement continus grace \u00e0 Python.\nNous couvrirons les sujets suivants:\n\nD\u00e9ploiement automatis\u00e9 de Software Factory sur un cloud OpenStack\nGestion des workflows d'int\u00e9gration et de d\u00e9ploiement continus grace \u00e0 Zuul\nGestion des noeuds esclaves pour les jobs de tests d'acceptation du code\nExport des logs des jobs sur Swift", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Cette pr\u00e9sentation s'adresse \u00e0 quiconque souhaitant mettre en place un syst\u00e8me d'int\u00e9gration et de d\u00e9ploiement continus pour ses propres projets. Nous partageons notre exp\u00e9rience dans ce domaine, en tant qu'utilisateurs et d\u00e9veloppeurs Python d'un environnement d'int\u00e9gration et de d\u00e9ploiement continus.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Assurer la qualit\u00e9 du code et \u00eatre capable de le mettre en production au plus vite sont des probl\u00e9matiques cruciales dans le d\u00e9veloppement logiciel, aussi bien pour les petits projets personnels que pour les projets de grande envergure comme OpenStack. Ces probl\u00e9matiques sont connues sous les noms d'int\u00e9gration et d\u00e9ploiement continus (CI et CD) respectivement. Toutefois mettre en place un environnement de CI/CD, bien qu'essentiel, peut de prime abord sembler ardu.</p>\n<p>Nous pr\u00e9sentons ici des outils (principalement) bas\u00e9s sur Python que nous utilisons au sein du projet <a href=\"http://softwarefactory.enovance.com\" title=\"Software Factory\">Software Factory</a>, pouss\u00e9 par Red Hat. Software Factory est une suite logicielle libre \"all in one\" de gestion de code collaborative, couvrant les besoins de bout en bout du cycle de vie du code:</p>\n<ul>\n<li>gestion de projet, des sprints de d\u00e9veloppement et des tickets avec Redmine</li>\n<li>gestion des versions et revue du code avec Git et Gerrit</li>\n<li>gestion des tests automatis\u00e9s avec Jenkins</li>\n<li>gestion de l'int\u00e9gration et du d\u00e9ploiement continus avec Zuul</li>\n<li>outils collaboratifs: etherpad, paste</li>\n</ul>\n<p>Nous avons automatis\u00e9 et simplifi\u00e9 le d\u00e9ploiement et la gestion de ces composants, permettant ainsi de mettre en place un environnement de d\u00e9veloppement propice \u00e0 l'int\u00e9gration et au d\u00e9ploiement continus grace \u00e0 Python.</p>\n<p>Nous couvrirons les sujets suivants:</p>\n<ul>\n<li>D\u00e9ploiement automatis\u00e9 de Software Factory sur un cloud OpenStack</li>\n<li>Gestion des workflows d'int\u00e9gration et de d\u00e9ploiement continus grace \u00e0 Zuul</li>\n<li>Gestion des noeuds esclaves pour les jobs de tests d'acceptation du code</li>\n<li>Export des logs des jobs sur Swift</li>\n</ul></div>", "audience_level": "Intermediate"},
{"speakers": ["Germain Salvato-Vallverdu"], "description": "Pr\u00e9sentation de l'utilisation de modules python en lien avec la chimie th\u00e9orique et les mat\u00e9riaux : pymatgen, matplotlib, plotly et ipython notebook.", "title": "Au sujet de python appliqu\u00e9 en chimie th\u00e9orique", "abstract": "La chimie th\u00e9orique est une discipline faisant appel \u00e0 de nombreuses comp\u00e9tences qui vont au del\u00e0 de la chimie-physique telles que le calcul haute performance et la programmation. La forte progression des moyens de calcul a pour cons\u00e9quence l'augmentation croissante de la quantit\u00e9 de donn\u00e9es \u00e0 traiter pour aboutir \u00e0 des r\u00e9sultats et tirer des conclusions scientifiques. De ce fait, il est n\u00e9cessaires de ma\u00eetriser un panel de techniques permettant de traiter efficacement ces donn\u00e9es.\nDans cette optique, python est un outil int\u00e9ressant du fait de sa simplicit\u00e9 \u00e0 la fois pour l\u2019apprentissage et l'utilisation en vue de pr\u00e9 ou post traitements de donn\u00e9es. De plus, de nombreuses biblioth\u00e8ques scientifiques telles que numpy, scipy ou matplotlib, pour les plus g\u00e9n\u00e9rales, simplifient grandement les taches de base (lecture des donn\u00e9es, interpolation, repr\u00e9sentation graphique ...) et permettent de les automatiser. Par ailleurs, l'utilisation de la version notebook d'ipython permet de regrouper le traitement des donn\u00e9es, leur visualisation et la r\u00e9daction des conclusions et peut s'apparenter \u00e0 un cahier de laboratoire num\u00e9rique interactif.\nCette conf\u00e9rence pr\u00e9sentera un cas concret d'utilisation d'un notebook ipython pour la construction d'un graphique \u00e0 partir des r\u00e9sultats de plusieurs simulations num\u00e9riques. Au travers de la r\u00e9alisation de ce graphique, les paquets Pymatgen, matplotlib et plotly seront rapidement pr\u00e9sent\u00e9s. Pymatgen est particuli\u00e8rement adapt\u00e9 \u00e0 l'\u00e9tude des mat\u00e9riaux et interfac\u00e9 avec de nombreux codes de simulation num\u00e9rique en chimie et physique, tandis que plotly est une surcouche de matplotlib permettant de construire des graphiques interactifs, facilement int\u00e9grable sur une page html et permettant un travail collaboratif.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Pr\u00e9sentation de l'utilisation de modules python en lien avec la chimie th\u00e9orique et les mat\u00e9riaux : pymatgen, matplotlib, plotly et ipython notebook.</p></div>", "abstract_md": "<div class=\"abstract\"><p>La chimie th\u00e9orique est une discipline faisant appel \u00e0 de nombreuses comp\u00e9tences qui vont au del\u00e0 de la chimie-physique telles que le calcul haute performance et la programmation. La forte progression des moyens de calcul a pour cons\u00e9quence l'augmentation croissante de la quantit\u00e9 de donn\u00e9es \u00e0 traiter pour aboutir \u00e0 des r\u00e9sultats et tirer des conclusions scientifiques. De ce fait, il est n\u00e9cessaires de ma\u00eetriser un panel de techniques permettant de traiter efficacement ces donn\u00e9es.</p>\n<p>Dans cette optique, python est un outil int\u00e9ressant du fait de sa simplicit\u00e9 \u00e0 la fois pour l\u2019apprentissage et l'utilisation en vue de pr\u00e9 ou post traitements de donn\u00e9es. De plus, de nombreuses biblioth\u00e8ques scientifiques telles que numpy, scipy ou matplotlib, pour les plus g\u00e9n\u00e9rales, simplifient grandement les taches de base (lecture des donn\u00e9es, interpolation, repr\u00e9sentation graphique ...) et permettent de les automatiser. Par ailleurs, l'utilisation de la version notebook d'ipython permet de regrouper le traitement des donn\u00e9es, leur visualisation et la r\u00e9daction des conclusions et peut s'apparenter \u00e0 un cahier de laboratoire num\u00e9rique interactif.</p>\n<p>Cette conf\u00e9rence pr\u00e9sentera un cas concret d'utilisation d'un notebook ipython pour la construction d'un graphique \u00e0 partir des r\u00e9sultats de plusieurs simulations num\u00e9riques. Au travers de la r\u00e9alisation de ce graphique, les paquets <a href=\"http://pymatgen.org/\">Pymatgen</a>, matplotlib et <a href=\"https://plot.ly/\">plotly</a> seront rapidement pr\u00e9sent\u00e9s. <a href=\"http://pymatgen.org/\">Pymatgen</a> est particuli\u00e8rement adapt\u00e9 \u00e0 l'\u00e9tude des mat\u00e9riaux et interfac\u00e9 avec de nombreux codes de simulation num\u00e9rique en chimie et physique, tandis que <a href=\"https://plot.ly/\">plotly</a> est une surcouche de matplotlib permettant de construire des graphiques interactifs, facilement int\u00e9grable sur une page html et permettant un travail collaboratif.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Pierre CHARLET"], "description": "Django est un framework web largement utilis\u00e9 dans la communaut\u00e9 Python.\nAu cours de cette pr\u00e9sentation, nous allons pr\u00e9senter Django, ses concepts, le cadre de travail qu'il propose, autour d'un exemple d'\u00e9criture d'une application web.\nNous parlerons \u00e9galement de sa communaut\u00e9 accueillante et des ressources annexes.", "title": "D\u00e9couverte de Django", "abstract": "Django est un framework web \u00e9crit en Python largement utilis\u00e9 dans cette communaut\u00e9.\nUtilisant le mod\u00e8le MVT, mod\u00e8les, vues, templates, il contient tous les outils n\u00e9cessaire au d\u00e9veloppement d'une application web, tant de petite que de grosse envergure.\nDjango nous fournit une palette importante d'outils suppl\u00e9mentaires nous permettant la r\u00e9solution de probl\u00e8mes courant tel que l'administration (backoffice), la gestion d'utilisateurs, la traduction ou encore la gestion des sessions. L'\u00e9cosyst\u00e8me se met \u00e0 jour sur les besoins du web, django rest-framework et django-pytest en sont deux illustrations.\nLa communaut\u00e9, tr\u00e8s ouverte et motrice de changements, est pr\u00e9sente tout au long de l'\u00e9laboration de votre projet pour vous aider !", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Django est un framework web largement utilis\u00e9 dans la communaut\u00e9 Python.\nAu cours de cette pr\u00e9sentation, nous allons pr\u00e9senter Django, ses concepts, le cadre de travail qu'il propose, autour d'un exemple d'\u00e9criture d'une application web.\nNous parlerons \u00e9galement de sa communaut\u00e9 accueillante et des ressources annexes.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Django est un framework web \u00e9crit en Python largement utilis\u00e9 dans cette communaut\u00e9.\nUtilisant le mod\u00e8le MVT, mod\u00e8les, vues, templates, il contient tous les outils n\u00e9cessaire au d\u00e9veloppement d'une application web, tant de petite que de grosse envergure.</p>\n<p>Django nous fournit une palette importante d'outils suppl\u00e9mentaires nous permettant la r\u00e9solution de probl\u00e8mes courant tel que l'administration (backoffice), la gestion d'utilisateurs, la traduction ou encore la gestion des sessions. L'\u00e9cosyst\u00e8me se met \u00e0 jour sur les besoins du web, django rest-framework et django-pytest en sont deux illustrations.</p>\n<p>La communaut\u00e9, tr\u00e8s ouverte et motrice de changements, est pr\u00e9sente tout au long de l'\u00e9laboration de votre projet pour vous aider !</p></div>", "audience_level": "Novice"},
{"speakers": ["Pierre-Yves Chibon"], "description": "The Fedora infrastructure is running a message bus, fedmsg.\nThis bus has allowed the infrastructure team to start to re-design the architecture of the infrastructure and how application interact with each others.\nIn this talk I am to present how we are building our infrastructure these days, how application interacts and what are the limits of this approach.", "title": "A bus based infrastructure", "abstract": "The Fedora infrastructure is running a message bus, fedmsg.\nThis bus has allowed the infrastructure team to start to re-design the architecture of the infrastructure and how application interact with each others.\nIn this talk I am to present how we are building our infrastructure these days, how application interacts and what are the limits of this approach.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>The Fedora infrastructure is running a message bus, fedmsg.</p>\n<p>This bus has allowed the infrastructure team to start to re-design the architecture of the infrastructure and how application interact with each others.</p>\n<p>In this talk I am to present how we are building our infrastructure these days, how application interacts and what are the limits of this approach.</p></div>", "abstract_md": "<div class=\"abstract\"><p>The Fedora infrastructure is running a message bus, fedmsg.</p>\n<p>This bus has allowed the infrastructure team to start to re-design the architecture of the infrastructure and how application interact with each others.</p>\n<p>In this talk I am to present how we are building our infrastructure these days, how application interacts and what are the limits of this approach.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Viviane Pons"], "description": "La plate-forme SageMathCloud offre des possibilit\u00e9s tr\u00e8s int\u00e9ressantes de partage de code pour Sage et python. En particulier, elle peut \u00eatre utilis\u00e9e dans le cadre d'un cour interactif. Nous expliquons ici quel a \u00e9t\u00e9 l'impact de l'outil pour une option Math-Informatique en premi\u00e8re ann\u00e9e de licence.", "title": "Enseigner avec SageMathCloud : retour sur exp\u00e9rience", "abstract": "Comment \u00e9veiller l'int\u00e9r\u00eat et l'esprit de recherche d'\u00e9tudiants de premi\u00e8re ann\u00e9e qui n'ont qu'une connaissance basique de la programmation et des math\u00e9matiques ? C'est \u00e0 cette question que j'ai essay\u00e9 de r\u00e9pondre l'ann\u00e9e derni\u00e8re lorsque l'on m'a charg\u00e9e de l'option \"Projet pluridisciplinaire en math\u00e9matique et informatique\". Venant des math\u00e9matiques exp\u00e9rimentales et de la combinatoire, la r\u00e9ponse m'a paru assez naturelle et tr\u00e8s vite, je me suis tourn\u00e9e vers Sage et l'outil en ligne SageMathCloud. \nLors de cet expos\u00e9, je pr\u00e9senterai les fonctionnalit\u00e9s offertes par SageMathCloud pour la gestion d'un cours en ligne. J'expliquerai comment l'interactivit\u00e9 des sessions a permis de r\u00e9v\u00e9ler le potentiel de mes \u00e9tudiants et leur esprit d'initiative. \nEnfin, ce sera l'occasion d'\u00e9voquer le projet OpenDreamKit qui, bien qu'il vise la recherche, pourra avoir des retomb\u00e9es tr\u00e8s int\u00e9ressantes pour SageMathCloud et l'enseignement plus particuli\u00e8rement.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>La plate-forme SageMathCloud offre des possibilit\u00e9s tr\u00e8s int\u00e9ressantes de partage de code pour Sage et python. En particulier, elle peut \u00eatre utilis\u00e9e dans le cadre d'un cour interactif. Nous expliquons ici quel a \u00e9t\u00e9 l'impact de l'outil pour une option Math-Informatique en premi\u00e8re ann\u00e9e de licence.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Comment \u00e9veiller l'int\u00e9r\u00eat et l'esprit de recherche d'\u00e9tudiants de premi\u00e8re ann\u00e9e qui n'ont qu'une connaissance basique de la programmation et des math\u00e9matiques ? C'est \u00e0 cette question que j'ai essay\u00e9 de r\u00e9pondre l'ann\u00e9e derni\u00e8re lorsque l'on m'a charg\u00e9e de l'option \"Projet pluridisciplinaire en math\u00e9matique et informatique\". Venant des math\u00e9matiques exp\u00e9rimentales et de la combinatoire, la r\u00e9ponse m'a paru assez naturelle et tr\u00e8s vite, je me suis tourn\u00e9e vers Sage et l'outil en ligne SageMathCloud. </p>\n<p>Lors de cet expos\u00e9, je pr\u00e9senterai les fonctionnalit\u00e9s offertes par SageMathCloud pour la gestion d'un cours en ligne. J'expliquerai comment l'interactivit\u00e9 des sessions a permis de r\u00e9v\u00e9ler le potentiel de mes \u00e9tudiants et leur esprit d'initiative. </p>\n<p>Enfin, ce sera l'occasion d'\u00e9voquer le projet OpenDreamKit qui, bien qu'il vise la recherche, pourra avoir des retomb\u00e9es tr\u00e8s int\u00e9ressantes pour SageMathCloud et l'enseignement plus particuli\u00e8rement.</p></div>", "audience_level": "Novice"},
{"speakers": ["Martin Richard"], "description": "C'est d\u00e9cid\u00e9, vous vous lancez dans un nouveau projet d'appli web et mobile. Vous visez le million d'utilisateurs, le passage au 20h, et Xavier Niel r\u00eavera de vous racheter. Maintenant, techniquement, comment faut-il s'y prendre ? Comment s'y retrouver dans la jungle des buzzwords ? Que reprendre des techniques des g\u00e9ants ? Qu'est-ce qui va nous servir dans l'\u00e9cosyst\u00e8me de Python ?", "title": "Votre appli web et Python: de z\u00e9ro au million d'utilisateurs", "abstract": "Vous avez lu tout un tas d'articles sur les microservices avec Django, du NoSQL, d\u00e9ploy\u00e9s avec Chef sur un cluster openstack. Maintenant, vous avez une id\u00e9e de comment g\u00e9rer un million d'utilisateurs, un bon mal de t\u00eate, et toujours aucune id\u00e9e de comment commencer.\nVotre objectif, c\u2019est de d\u00e9velopper une application qui fonctionne bien : c\u2019est \u00e0 dire avec peu de bugs (visibles), de bonnes performances et une bonne disponibilit\u00e9. Sans cette base stable, la dette technique finira pas devenir un frein \u00e0 votre r\u00e9ussite.\nOn verra d\u00e9j\u00e0 comment, d\u00e8s le d\u00e9but du projet, on peut anticiper sur des probl\u00e8mes futurs gr\u00e2ce \u00e0 quelques d\u00e9cisions et bonnes pratiques. Puis on s\u2019int\u00e9ressera \u00e0 la vie de l\u2019application une fois en production : comment assurer sa stabilit\u00e9 et l\u2019ajout de fonctionnalit\u00e9s et comment s\u2019en sortir en cas de panne. Enfin, on verra quelques techniques qui nous permettront de progressivement accueillir de nouveaux utilisateurs.\nPython et son \u00e9cosyst\u00e8me seront mis \u00e0 contribution \u00e0 chaque \u00e9tape !", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>C'est d\u00e9cid\u00e9, vous vous lancez dans un nouveau projet d'appli web et mobile. Vous visez le million d'utilisateurs, le passage au 20h, et Xavier Niel r\u00eavera de vous racheter. Maintenant, techniquement, comment faut-il s'y prendre ? Comment s'y retrouver dans la jungle des buzzwords ? Que reprendre des techniques des g\u00e9ants ? Qu'est-ce qui va nous servir dans l'\u00e9cosyst\u00e8me de Python ?</p></div>", "abstract_md": "<div class=\"abstract\"><p>Vous avez lu tout un tas d'articles sur les microservices avec Django, du NoSQL, d\u00e9ploy\u00e9s avec Chef sur un cluster openstack. Maintenant, vous avez une id\u00e9e de comment g\u00e9rer un million d'utilisateurs, un bon mal de t\u00eate, et toujours aucune id\u00e9e de comment commencer.</p>\n<p>Votre objectif, c\u2019est de d\u00e9velopper une application qui fonctionne bien : c\u2019est \u00e0 dire avec peu de bugs (visibles), de bonnes performances et une bonne disponibilit\u00e9. Sans cette base stable, la dette technique finira pas devenir un frein \u00e0 votre r\u00e9ussite.</p>\n<p>On verra d\u00e9j\u00e0 comment, d\u00e8s le d\u00e9but du projet, on peut anticiper sur des probl\u00e8mes futurs gr\u00e2ce \u00e0 quelques d\u00e9cisions et bonnes pratiques. Puis on s\u2019int\u00e9ressera \u00e0 la vie de l\u2019application une fois en production : comment assurer sa stabilit\u00e9 et l\u2019ajout de fonctionnalit\u00e9s et comment s\u2019en sortir en cas de panne. Enfin, on verra quelques techniques qui nous permettront de progressivement accueillir de nouveaux utilisateurs.</p>\n<p>Python et son \u00e9cosyst\u00e8me seront mis \u00e0 contribution \u00e0 chaque \u00e9tape !</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Jonathan Lab\u00e9jof"], "description": "This presentation is about good practices in the development of distributed systems with discussions about several software engineering paradigms used in Canopsis, such as an hypervisor/advanced supervisor system.", "title": "Software engineering good practices to the development of Canopsis, the first open-source hypervisor", "abstract": "Canopsis is the first open-source hypervisor written in Python and Javascript with a large set of external middleware and frameworks such as rabbitmq, mongodb, emberjs, and then some...\nWith a large set of good practices in term of software engineering, Canopsis is able to process about 750 event/s, and provides several features such as:\n\nan \"\u00e0 la carte\" system with component-based approach for specializing event processing, data storage and frontend dashboard generation.\ninteroperability with more than 10 supervisors thanks to standardisation of inputs and outputs.\ndata-oriented with schemas in order to be as close as possible to final user requirements.\nauto-(re)configurability at runtime.\nauto-monitoring where Canopsis events are considered such as Canopsis inputs.\n\nThose points will be discussed and some perspectives will be announced...", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>This presentation is about good practices in the development of distributed systems with discussions about several software engineering paradigms used in Canopsis, such as an hypervisor/advanced supervisor system.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Canopsis is the first open-source hypervisor written in Python and Javascript with a large set of external middleware and frameworks such as rabbitmq, mongodb, emberjs, and then some...</p>\n<p>With a large set of good practices in term of software engineering, Canopsis is able to process about 750 event/s, and provides several features such as:</p>\n<ul>\n<li>an \"\u00e0 la carte\" system with component-based approach for specializing event processing, data storage and frontend dashboard generation.</li>\n<li>interoperability with more than 10 supervisors thanks to standardisation of inputs and outputs.</li>\n<li>data-oriented with schemas in order to be as close as possible to final user requirements.</li>\n<li>auto-(re)configurability at runtime.</li>\n<li>auto-monitoring where Canopsis events are considered such as Canopsis inputs.</li>\n</ul>\n<p>Those points will be discussed and some perspectives will be announced...</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Jeremy Laforet"], "description": "Python est un language de plus en plus populaire, particuli\u00e8rement chez les scientifiques (voir la conf\u00e9rence Scipy). Mais pourquoi? Nous tenterons de donner quelques pistes, bas\u00e9es sur notre exp\u00e9rience directe.", "title": "Utilisation de Python dans un laboratoire de recherche", "abstract": "Pourquoi tant de succ\u00e8s pour Python dans les sciences alors que ce n'est pas un langage scientifique?\n- Les grands avantages de Python par rapport \u00e0 d'autres solutions (langages propri\u00e9taires et/ou compil\u00e9s).\n- Les limites de Python et comment s'en accommoder. \n- Retour d'exp\u00e9rience dans un laboratoire de recherche de l'UTC (Universit\u00e9 de Technologie de Compi\u00e8gne).", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Python est un language de plus en plus populaire, particuli\u00e8rement chez les scientifiques (voir la conf\u00e9rence Scipy). Mais pourquoi? Nous tenterons de donner quelques pistes, bas\u00e9es sur notre exp\u00e9rience directe. </p></div>", "abstract_md": "<div class=\"abstract\"><p>Pourquoi tant de succ\u00e8s pour Python dans les sciences alors que ce n'est pas un langage scientifique?\n- Les grands avantages de Python par rapport \u00e0 d'autres solutions (langages propri\u00e9taires et/ou compil\u00e9s).\n- Les limites de Python et comment s'en accommoder. \n- Retour d'exp\u00e9rience dans un laboratoire de recherche de l'UTC (Universit\u00e9 de Technologie de Compi\u00e8gne).</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Alex Marandon"], "description": "Python nous r\u00e9serve g\u00e9n\u00e9ralement peu de (mauvaises) surprises. Il existe cependant quelques recoins \u00e9tranges que nous allons explorer pour nous amuser et nous instruire.", "title": "Pi\u00e8ges et bizarreries de (C)Python", "abstract": "Python est con\u00e7u pour \u00e9viter les comportements inattendus mais on en rencontre pourtant parfois, la plupart li\u00e9s \u00e0 l'impl\u00e9mentation de r\u00e9f\u00e9rence CPython. Ces comportements \u00e9tranges sont autant d'opportunit\u00e9s de mieux comprendre le mod\u00e8le d'ex\u00e9cution de Python et nous fournissent un beau pr\u00e9texte pour inspecter son bytecode.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Python nous r\u00e9serve g\u00e9n\u00e9ralement peu de (mauvaises) surprises. Il existe cependant quelques recoins \u00e9tranges que nous allons explorer pour nous amuser et nous instruire.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Python est con\u00e7u pour \u00e9viter les comportements inattendus mais on en rencontre pourtant parfois, la plupart li\u00e9s \u00e0 l'impl\u00e9mentation de r\u00e9f\u00e9rence CPython. Ces comportements \u00e9tranges sont autant d'opportunit\u00e9s de mieux comprendre le mod\u00e8le d'ex\u00e9cution de Python et nous fournissent un beau pr\u00e9texte pour inspecter son bytecode.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Arthur Lutz"], "description": "Comment utiliser Salt (outil en python pour la gestion d'infrastructure, gestion de conf centralis\u00e9 mais aussi ex\u00e9cution \u00e0 distance et orchestrateur) pour tester des bouts de son infrastructure (ses applications n-tiers) dans un environnement \"bac-\u00e0-sable\", en machines virtuelles sur un cloud priv\u00e9 (OpenStack, en python!), soit en conteneurs (LXC ou docker). Le tout versionn\u00e9 avec du mercurial.", "title": "Utiliser Salt pour tester son infrastructure sur OpenStack ou Docker avant la mise en production", "abstract": "Configurer et orchestrer son infrastructure avec un outil de gestion de \nconfiguration centralis\u00e9e tel que Salt comporte de nombreux avantages. \nLa conservation et l'historisation des fichiers de configuration dans un \nentrep\u00f4t de source g\u00e9r\u00e9 par un DVCS (mercurial ou git) en fait partie. \nSalt permet ensuite de faire \u00e9voluer son infrastructure en la testant\ndans des environnements isol\u00e9s. Une fois la description compl\u00e8te, \nreproduire une partie de son infrastructure de production sur un \nenvironnement virtualis\u00e9 tel qu'un cloud \npriv\u00e9 (OpenStack) devient possible et automatisable avec \nsalt-cloud. L'\u00e9tape suivante est de pouvoir reproduire des portions \nde son infrastructure dans des conteneurs l\u00e9gers tels que docker ou \nLXC directement sur son portable. Pour cela, le pilotage de docker par \nSalt et les fonctionnalit\u00e9s d'orchestration de Salt permettent une agilit\u00e9 \nsans pr\u00e9c\u00e9dent.\nIl s'agit d'un bon compl\u00e9ment pour le TDI : Test Driven Infrastructure. \nL'infrastructure est test\u00e9e en mode \"int\u00e9gration continue\" et on peut \ntester et d\u00e9bugger une partie de l'infrastructure en mode \"bac \u00e0 sable\".\nCe mod\u00e8le peut ensuite \u00eatre d\u00e9clin\u00e9 avec l'utilisation des branches dans \ngit ou mercurial o\u00f9 certaines branches vont \u00eatre appliqu\u00e9es \u00e0 la partie \nproduction de l'infrastructure alors que d'autres sont appliqu\u00e9s a la \npr\u00e9production ou aux environnements docker ou LXC en local.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Comment utiliser Salt (outil en python pour la gestion d'infrastructure, gestion de conf centralis\u00e9 mais aussi ex\u00e9cution \u00e0 distance et orchestrateur) pour tester des bouts de son infrastructure (ses applications n-tiers) dans un environnement \"bac-\u00e0-sable\", en machines virtuelles sur un cloud priv\u00e9 (OpenStack, en python!), soit en conteneurs (LXC ou docker). Le tout versionn\u00e9 avec du mercurial.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Configurer et orchestrer son infrastructure avec un outil de gestion de \nconfiguration centralis\u00e9e tel que Salt comporte de nombreux avantages. \nLa conservation et l'historisation des fichiers de configuration dans un \nentrep\u00f4t de source g\u00e9r\u00e9 par un DVCS (mercurial ou git) en fait partie. \nSalt permet ensuite de faire \u00e9voluer son infrastructure en la testant\ndans des environnements isol\u00e9s. Une fois la description compl\u00e8te, \nreproduire une partie de son infrastructure de production sur un \nenvironnement virtualis\u00e9 tel qu'un cloud \npriv\u00e9 (OpenStack) devient possible et automatisable avec \n<em>salt-cloud</em>. L'\u00e9tape suivante est de pouvoir reproduire des portions \nde son infrastructure dans des conteneurs l\u00e9gers tels que docker ou \nLXC directement sur son portable. Pour cela, le pilotage de docker par \nSalt et les fonctionnalit\u00e9s d'orchestration de Salt permettent une agilit\u00e9 \nsans pr\u00e9c\u00e9dent.</p>\n<p>Il s'agit d'un bon compl\u00e9ment pour le TDI : Test Driven Infrastructure. \nL'infrastructure est test\u00e9e en mode \"int\u00e9gration continue\" et on peut \ntester et d\u00e9bugger une partie de l'infrastructure en mode \"bac \u00e0 sable\".</p>\n<p>Ce mod\u00e8le peut ensuite \u00eatre d\u00e9clin\u00e9 avec l'utilisation des branches dans \ngit ou mercurial o\u00f9 certaines branches vont \u00eatre appliqu\u00e9es \u00e0 la partie \nproduction de l'infrastructure alors que d'autres sont appliqu\u00e9s a la \npr\u00e9production ou aux environnements docker ou LXC en local. </p></div>", "audience_level": "Intermediate"},
{"speakers": ["B\u00e9r\u00e9nice Batut"], "description": "In this talk, I am going to introduce how we created ASaiM (Auvergne Sequence Analysis of Intestinal Microbiota), a framework to process and analyze data from intestinal microbiota, designed for biologists. I will also cover what I have learnt developing such a software.", "title": "ASaiM: Lessons learned from developing a framework for biologists", "abstract": "With new technologies and reduced costs of DNA sequencing, biological data are massively generated. Such data are complex and require multi-step processing. While numerous tools exist, most of them are only performing one task, not interoperable, not user-friendly, and so on... That is a big deal for biologists!\nWe are building ASaiM (Auvergne Sequence Analysis of Intestinal Microbiota), a framework to process and analyze data from intestinal microbiota, designed for biologists: simple yet powerful!\nIn this talk, I am going to introduce how we created ASaiM, why we chose Python, but also what I have learnt developing such a software.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>In this talk, I am going to introduce how we created ASaiM (Auvergne Sequence Analysis of Intestinal Microbiota), a framework to process and analyze data from intestinal microbiota, designed for biologists. I will also cover what I have learnt developing such a software.</p></div>", "abstract_md": "<div class=\"abstract\"><p>With new technologies and reduced costs of DNA sequencing, biological data are massively generated. Such data are complex and require multi-step processing. While numerous tools exist, most of them are only performing one task, not interoperable, not user-friendly, and so on... That is a big deal for biologists!</p>\n<p>We are building ASaiM (Auvergne Sequence Analysis of Intestinal Microbiota), a framework to process and analyze data from intestinal microbiota, designed for biologists: simple yet powerful!</p>\n<p>In this talk, I am going to introduce how we created ASaiM, why we chose Python, but also what I have learnt developing such a software.</p></div>", "audience_level": "Novice"},
{"speakers": ["Alexis M\u00e9taireau", "Mathieu Leplatre", "R\u00e9my Hubscher"], "description": "Kinto est outil qui suit la philosophie \"no-backend\". L'id\u00e9e \u00e9tant d'avoir un backend g\u00e9n\u00e9rique, d\u00e9ployable tr\u00e8s facilement, qui permette \u00e0 tous et toutes et de stocker, requ\u00eater et partager des donn\u00e9es sans avoir \u00e0 d\u00e9ployer de service web.\nCette pr\u00e9sentation vise \u00e0 pr\u00e9senter Kinto, et l'\u00e9cosyst\u00e8me que nous mettons en place petit \u00e0 petit pour permettre a tous d'\u00eatre souverain sur ses donn\u00e9es.", "title": "Kinto: stocker, synchroniser et partager ses donn\u00e9es de mani\u00e8re g\u00e9n\u00e9rique", "abstract": "Plan (rapide):\nA. Histoire:\n\nL'id\u00e9e de d\u00e9part (Mat + Alexis \u00e0 Django Cong il y a 3 ans);\nLes quelques sprints sur Daybed;\nL\u2019int\u00e9r\u00eat de Mozilla dans le projet;\nReboot \u2122;\n\nB. Les choix philosophiques\n\nAbstraction des concepts cl\u00e9s;\nMettre la communaut\u00e9 au centre du d\u00e9veloppement;\nN\u2019impl\u00e9menter que des fonctionnalit\u00e9s utiles (cas d'utilisation):\nNe pas faire le caf\u00e9\n\nC. Dans quel paysage s'inscris-ton ?\n\nCouchDB / PouchDB;\nRemote Storage;\nHoodie;\nCas d'utilisations \u00e0 Mozilla (Ops, QA);\n\nD. D\u00e9mo\n\nPour comprendre de quoi on parle.\n\nE. Architecture du projet\n\nCliquet, Kinto, Resources, Schemas, Backends, Permissions\n\nF. Quid du futur ?", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Kinto est outil qui suit la philosophie \"no-backend\". L'id\u00e9e \u00e9tant d'avoir un backend g\u00e9n\u00e9rique, d\u00e9ployable tr\u00e8s facilement, qui permette \u00e0 tous et toutes et de stocker, requ\u00eater et partager des donn\u00e9es sans avoir \u00e0 d\u00e9ployer de service web.</p>\n<p>Cette pr\u00e9sentation vise \u00e0 pr\u00e9senter Kinto, et l'\u00e9cosyst\u00e8me que nous mettons en place petit \u00e0 petit pour permettre a tous d'\u00eatre souverain sur ses donn\u00e9es.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Plan (rapide):</p>\n<p>A. Histoire:</p>\n<ul>\n<li>L'id\u00e9e de d\u00e9part (Mat + Alexis \u00e0 Django Cong il y a 3 ans);</li>\n<li>Les quelques sprints sur Daybed;</li>\n<li>L\u2019int\u00e9r\u00eat de Mozilla dans le projet;</li>\n<li>Reboot \u2122;</li>\n</ul>\n<p>B. Les choix philosophiques</p>\n<ul>\n<li>Abstraction des concepts cl\u00e9s;</li>\n<li>Mettre la communaut\u00e9 au centre du d\u00e9veloppement;</li>\n<li>N\u2019impl\u00e9menter que des fonctionnalit\u00e9s utiles (cas d'utilisation):</li>\n<li>Ne pas faire le caf\u00e9</li>\n</ul>\n<p>C. Dans quel paysage s'inscris-ton ?</p>\n<ul>\n<li>CouchDB / PouchDB;</li>\n<li>Remote Storage;</li>\n<li>Hoodie;</li>\n<li>Cas d'utilisations \u00e0 Mozilla (Ops, QA);</li>\n</ul>\n<p>D. D\u00e9mo</p>\n<ul>\n<li>Pour comprendre de quoi on parle.</li>\n</ul>\n<p>E. Architecture du projet</p>\n<ul>\n<li>Cliquet, Kinto, Resources, Schemas, Backends, Permissions</li>\n</ul>\n<p>F. Quid du futur ?</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Georges Racinet"], "description": "Un cadre modulaire et dynamique pour r\u00e9aliser vos applications m\u00e9tier.", "title": "Anyblok", "abstract": "Anyblok est un moteur d'applications m\u00e9tier \u00e0 chargement dynamique de modules (les bloks). Il est \u00e9crit en Python 3, en ayant \u00e0 c\u0153ur de respecter les meilleures pratiques, notamment en termes d'utilisation de composants standard : la persistance est fond\u00e9e sur SQLAlchemy, les bloks sont des paquets Python standard, une couche web Pyramid est fournie, facultative et rempla\u00e7able\u2026", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Un cadre modulaire et dynamique pour r\u00e9aliser vos applications m\u00e9tier.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Anyblok est un moteur d'applications m\u00e9tier \u00e0 chargement dynamique de modules (les <em>bloks</em>). Il est \u00e9crit en Python 3, en ayant \u00e0 c\u0153ur de respecter les meilleures pratiques, notamment en termes d'utilisation de composants standard : la persistance est fond\u00e9e sur SQLAlchemy, les bloks sont des paquets Python standard, une couche web Pyramid est fournie, facultative et rempla\u00e7able\u2026</p></div>", "audience_level": "Intermediate"},
{"speakers": ["ebel franck"], "description": "Pr\u00e9sentation de la biblioth\u00e8que scapy et d\u00e9monstrations appliqu\u00e9es \u00e0 des probl\u00e8mes concrets d'administrateurs r\u00e9seaux et de consultants en s\u00e9curit\u00e9.", "title": "Scapy, application \u00e0 la s\u00e9curit\u00e9", "abstract": "La pr\u00e9sentation d\u00e9taillera la biblioth\u00e8que scapy et montrera pas \u00e0 pas son utilisation.\nDes notions de r\u00e9seaux , surtout du mod\u00e8le OSI et TCP/IP sera n\u00e9cessaire pour comprendre certaines d\u00e9monstrations et applications.\nLa programmation de base en python devra \u00eatre connue.\nLes d\u00e9monstrations seront des cas concrets rencontr\u00e9s lors des audits de s\u00e9curit\u00e9s ( pentest) et d'administration des r\u00e9seaux.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Pr\u00e9sentation de la biblioth\u00e8que scapy et d\u00e9monstrations appliqu\u00e9es \u00e0 des probl\u00e8mes concrets d'administrateurs r\u00e9seaux et de consultants en s\u00e9curit\u00e9.</p></div>", "abstract_md": "<div class=\"abstract\"><p>La pr\u00e9sentation d\u00e9taillera la biblioth\u00e8que scapy et montrera pas \u00e0 pas son utilisation.\nDes notions de r\u00e9seaux , surtout du mod\u00e8le OSI et TCP/IP sera n\u00e9cessaire pour comprendre certaines d\u00e9monstrations et applications.\nLa programmation de base en python devra \u00eatre connue.\nLes d\u00e9monstrations seront des cas concrets rencontr\u00e9s lors des audits de s\u00e9curit\u00e9s ( pentest) et d'administration des r\u00e9seaux.</p></div>", "audience_level": "Novice"},
{"speakers": ["Kevin Messer"], "description": "Pr\u00e9sentation du d\u00e9ploiement d'une application python / django avec Ansible et des nouveaut\u00e9s de la version 2.", "title": "Ansible is going 2 upgrade...", "abstract": "Ansible est un outil versatile, utilis\u00e9 aussi bien par les d\u00e9veloppeurs du dimanche, que par les sys-admins chevronn\u00e9es.\nLe talk se d\u00e9roulera en deux parties, chacune divis\u00e9es en deux:\n\n\nPr\u00e9sentation d'Ansible\n\n\nPr\u00e9sentation des nouveaut\u00e9s de la future version 2\n\n\nPremi\u00e8re partie:\n\nIntroduction \u00e0 Ansible\nD\u00e9mo de mise en prod d'une application Django\n\nDeuxi\u00e8me partie:\n\nIntroduction aux nouveaut\u00e9s de la version 2\nD\u00e9mo des possibilit\u00e9s de la nouvelle version", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Pr\u00e9sentation du d\u00e9ploiement d'une application python / django avec Ansible et des nouveaut\u00e9s de la version 2.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Ansible est un outil versatile, utilis\u00e9 aussi bien par les d\u00e9veloppeurs du dimanche, que par les sys-admins chevronn\u00e9es.</p>\n<p>Le talk se d\u00e9roulera en deux parties, chacune divis\u00e9es en deux:</p>\n<ul>\n<li>\n<p>Pr\u00e9sentation d'Ansible</p>\n</li>\n<li>\n<p>Pr\u00e9sentation des nouveaut\u00e9s de la future version 2</p>\n</li>\n</ul>\n<p>Premi\u00e8re partie:</p>\n<ul>\n<li>Introduction \u00e0 Ansible</li>\n<li>D\u00e9mo de mise en prod d'une application Django</li>\n</ul>\n<p>Deuxi\u00e8me partie:</p>\n<ul>\n<li>Introduction aux nouveaut\u00e9s de la version 2</li>\n<li>D\u00e9mo des possibilit\u00e9s de la nouvelle version</li>\n</ul></div>", "audience_level": "Intermediate"},
{"speakers": ["Benoit Chesneau"], "description": "Que pouvons-nous apprendre de Erlang pour le d\u00e9veloppement de services fiables permettant de nombreuses requ\u00eates concurrentes en Python? Cette talk pr\u00e9sentera certaines techniques utilis\u00e9es en Erlang et comment elles peuvent \u00eatre utilis\u00e9es pour r\u00e9soudre les probl\u00e8mes d'une mani\u00e8re plus efficace en Python. Elle discutera \u00e9galement de la mani\u00e8re dont Python pourrait \u00e9voluer en cons\u00e9quence.", "title": "Let it crash - Que peut apporter Erlang \u00e0 Python", "abstract": "Auteur de nombreuses applications et librairies en Erlang et Python, je passe souvent d\u2019un langage \u00e0 l\u2019autre au cours de la journ\u00e9e. L\u2019usage d\u2019Erlang a profond\u00e9ment chang\u00e9 la fa\u00e7on dont je code en Python.\nCette pr\u00e9sentation couvrira certains techniques utilis\u00e9es en Erlang et d\u2019autres langages fonctionnels et comment elles peuvent r\u00e9soudre des probl\u00e8mes de mani\u00e8re plus performantes, robustes et  efficace que les pratiques standards en Python. Elle discutera aussi de certains changements ou additions possibles \u00e0 Python et la fa\u00e7on dont cela pourrait \u00e9tendre son usage.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Que pouvons-nous apprendre de Erlang pour le d\u00e9veloppement de services fiables permettant de nombreuses requ\u00eates concurrentes en Python? Cette talk pr\u00e9sentera certaines techniques utilis\u00e9es en Erlang et comment elles peuvent \u00eatre utilis\u00e9es pour r\u00e9soudre les probl\u00e8mes d'une mani\u00e8re plus efficace en Python. Elle discutera \u00e9galement de la mani\u00e8re dont Python pourrait \u00e9voluer en cons\u00e9quence.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Auteur de nombreuses applications et librairies en Erlang et Python, je passe souvent d\u2019un langage \u00e0 l\u2019autre au cours de la journ\u00e9e. L\u2019usage d\u2019Erlang a profond\u00e9ment chang\u00e9 la fa\u00e7on dont je code en Python.</p>\n<p>Cette pr\u00e9sentation couvrira certains techniques utilis\u00e9es en Erlang et d\u2019autres langages fonctionnels et comment elles peuvent r\u00e9soudre des probl\u00e8mes de mani\u00e8re plus performantes, robustes et  efficace que les pratiques standards en Python. Elle discutera aussi de certains changements ou additions possibles \u00e0 Python et la fa\u00e7on dont cela pourrait \u00e9tendre son usage.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Michael Scherer"], "description": "Pour \u00eatre riche et c\u00e9l\u00e8bre, vous pouvez travailler beaucoup, gagner\nau loto, ou naitre riche. Mais maintenant, une autre voie est possible\ngr\u00e2ce \u00e0 Bandit, un outil de la fondation openstack pour analyser le\ncode source d'application python afin de trouver des failles de s\u00e9curit\u00e9.", "title": "Audit de s\u00e9curit\u00e9 d'application python avec Bandit", "abstract": "\u00c0 travers ce talk, d\u00e9couvrez comment Bandit facilite l'audit de code, quel\ntype de failles courantes est ce qu'il va remonter et ce qu'il faut faire \nsi \u00e7a arrive, et quoi regarder apr\u00e8s le passage de l'outil.\nEt comment trouver une faille peut ouvrir les portes de la gloire\net de la fortune \n(attention, ce r\u00e9sum\u00e9 est non contractuel)", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Pour \u00eatre riche et c\u00e9l\u00e8bre, vous pouvez travailler beaucoup, gagner\nau loto, ou naitre riche. Mais maintenant, une autre voie est possible\ngr\u00e2ce \u00e0 Bandit, un outil de la fondation openstack pour analyser le\ncode source d'application python afin de trouver des failles de s\u00e9curit\u00e9.</p></div>", "abstract_md": "<div class=\"abstract\"><p>\u00c0 travers ce talk, d\u00e9couvrez comment Bandit facilite l'audit de code, quel\ntype de failles courantes est ce qu'il va remonter et ce qu'il faut faire \nsi \u00e7a arrive, et quoi regarder apr\u00e8s le passage de l'outil.</p>\n<p>Et comment trouver une faille peut ouvrir les portes de la gloire\net de la fortune </p>\n<p>(attention, ce r\u00e9sum\u00e9 est non contractuel)</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Yann Gravrand"], "description": "Les tests de diff\u00e9rences visuelles constituent un moyen efficace pour se pr\u00e9munir des r\u00e9gressions au sein des applications web.\nCette pr\u00e9sentation d\u00e9crit les types d\u2019application pour lesquelles ces tests pr\u00e9sentent de l\u2019int\u00e9r\u00eat, les outils que nous avons adopt\u00e9s, et des retours d\u2019exp\u00e9rience sur les avantages et inconv\u00e9nients de ces outils.", "title": "Visuellement correct - tests de non r\u00e9gression visuels automatis\u00e9s", "abstract": "Apr\u00e8s avoir \u00e9crit des tests unitaires pour les parties m\u00e9tier de notre code, nous avons souhait\u00e9 ajouter un autre niveau de v\u00e9rifications automatis\u00e9es : les tests de diff\u00e9rences visuelles.\nCe vieux r\u00eave des d\u00e9veloppeurs web consiste \u00e0 comparer visuellement les pages web d'une source reconnue comme fiable (baseline) avec la version que l'on s'appr\u00eate \u00e0 d\u00e9ployer.\nIl est ainsi possible de v\u00e9rifier l'impact des nouvelles fonctionnalit\u00e9s sur une nouvelle version, s'assurer de la non r\u00e9gression, et une fois l'impact visuel \u00e9ventuel accept\u00e9, \u00e9tablir une nouvelle baseline pour non r\u00e9gression future.\nCette pr\u00e9sentation d\u00e9crit des cas concrets dans lesquels ces types de v\u00e9rifications pr\u00e9sentent de l\u2019int\u00e9r\u00eat.\nNous verrons ensuite l\u2019architecture et le workflow que nous avons adopt\u00e9s afin de relever le d\u00e9fi, \u00e0 l\u2019aide d\u2019une librairie python nomm\u00e9e dpxdt d\u00e9velopp\u00e9e chez Google.\nNous terminerons par un retour d\u2019exp\u00e9rience sur les interactions avec notre syst\u00e8me d\u2019int\u00e9gration continue, des pistes d'am\u00e9lioration, et les limites du proc\u00e9d\u00e9.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Les tests de diff\u00e9rences visuelles constituent un moyen efficace pour se pr\u00e9munir des r\u00e9gressions au sein des applications web.\nCette pr\u00e9sentation d\u00e9crit les types d\u2019application pour lesquelles ces tests pr\u00e9sentent de l\u2019int\u00e9r\u00eat, les outils que nous avons adopt\u00e9s, et des retours d\u2019exp\u00e9rience sur les avantages et inconv\u00e9nients de ces outils.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Apr\u00e8s avoir \u00e9crit des tests unitaires pour les parties m\u00e9tier de notre code, nous avons souhait\u00e9 ajouter un autre niveau de v\u00e9rifications automatis\u00e9es : les tests de diff\u00e9rences visuelles.\nCe vieux r\u00eave des d\u00e9veloppeurs web consiste \u00e0 comparer visuellement les pages web d'une source reconnue comme fiable (baseline) avec la version que l'on s'appr\u00eate \u00e0 d\u00e9ployer.\nIl est ainsi possible de v\u00e9rifier l'impact des nouvelles fonctionnalit\u00e9s sur une nouvelle version, s'assurer de la non r\u00e9gression, et une fois l'impact visuel \u00e9ventuel accept\u00e9, \u00e9tablir une nouvelle baseline pour non r\u00e9gression future.\nCette pr\u00e9sentation d\u00e9crit des cas concrets dans lesquels ces types de v\u00e9rifications pr\u00e9sentent de l\u2019int\u00e9r\u00eat.\nNous verrons ensuite l\u2019architecture et le workflow que nous avons adopt\u00e9s afin de relever le d\u00e9fi, \u00e0 l\u2019aide d\u2019une librairie python nomm\u00e9e dpxdt d\u00e9velopp\u00e9e chez Google.\nNous terminerons par un retour d\u2019exp\u00e9rience sur les interactions avec notre syst\u00e8me d\u2019int\u00e9gration continue, des pistes d'am\u00e9lioration, et les limites du proc\u00e9d\u00e9.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Charlie Clark"], "description": "openpyxl started largely as the reverse-engineering of existing files.  While this allowed the project to get up and running quickly, it also turned out to be a dead-end when it came to supporting more advanced features. This talk will explain how we've shifted to using descriptors, code generation and possibly the world's worst parser for more reliable code and faster development.", "title": "When generated code makes sense", "abstract": "Only after a great deal of public pressure did Microsoft agree to make the specification of Microsoft Office 2007 public and even this was after the fact. The result was many thousands of pages of narrative description and an extensive XML schema. Whatever one may think of the company or the format, the fact remains that for many offices Microsoft Excel is a standard format and we want to make it as easy as possible to work with the files with Python.\nopenpyxl started largely as the reverse-engineering of existing files.  While this allowed the project to get up and running quickly, it also turned out to be a dead-end when it came to supporting more advanced features.\nThe Office Open XML Schema is, in effect, the domain-specific language for Microsoft Office. With tools like lxml it's even possible to work with this directly from Python but this requires extensive and detailed knowledge of something that is rarely intuitive and often downright confusing. Furthermore, manipulating XML in memory can be a problem on very large workbooks.\nIn openpyxl we introduced descriptors to deal with common types in the schema, and added class methods so that we could simplify parsing but keep the Python API as simple as possible. This started out as a fairly laborious transcription of schema to class definitions that has since been replaced by code generated by what might possibly be the world's worst parser \u2013 every library has to have some horrible code in it somewhere!\nThe result was that over 200 classes and their naive tests could be generated automatically to provide near complete support for the chart API. The process isn't perfect: code rarely runs straight out of the box but it has made it possible to support features that otherwise could only ever be partially supported at best.\nThe talk will cover what tools Python provides to make this kind of adventure succeed and where things could be improved.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>openpyxl started largely as the reverse-engineering of existing files.  While this allowed the project to get up and running quickly, it also turned out to be a dead-end when it came to supporting more advanced features. This talk will explain how we've shifted to using descriptors, code generation and possibly the world's worst parser for more reliable code and faster development.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Only after a great deal of public pressure did Microsoft agree to make the specification of Microsoft Office 2007 public and even this was after the fact. The result was many thousands of pages of narrative description and an extensive XML schema. Whatever one may think of the company or the format, the fact remains that for many offices Microsoft Excel is a standard format and we want to make it as easy as possible to work with the files with Python.</p>\n<p>openpyxl started largely as the reverse-engineering of existing files.  While this allowed the project to get up and running quickly, it also turned out to be a dead-end when it came to supporting more advanced features.</p>\n<p>The Office Open XML Schema is, in effect, the domain-specific language for Microsoft Office. With tools like lxml it's even possible to work with this directly from Python but this requires extensive and detailed knowledge of something that is rarely intuitive and often downright confusing. Furthermore, manipulating XML in memory can be a problem on very large workbooks.</p>\n<p>In openpyxl we introduced descriptors to deal with common types in the schema, and added class methods so that we could simplify parsing but keep the Python API as simple as possible. This started out as a fairly laborious transcription of schema to class definitions that has since been replaced by code generated by what might possibly be the world's worst parser \u2013 every library has to have some horrible code in it somewhere!</p>\n<p>The result was that over 200 classes and their naive tests could be generated automatically to provide near complete support for the chart API. The process isn't perfect: code rarely runs straight out of the box but it has made it possible to support features that otherwise could only ever be partially supported at best.</p>\n<p>The talk will cover what tools Python provides to make this kind of adventure succeed and where things could be improved.</p></div>", "audience_level": "Experienced"},
{"speakers": ["Boris FELD"], "description": "Tr\u00e8s connu pour ses excellents travaux et ses dons, le marabout Boris peut soigner vos tests de leurs mocks, garantir le retour du statut vert aim\u00e9, r\u00e9duire la dur\u00e9e de vos tests et am\u00e9liorer vos relations avec votre sysadmin. Succ\u00e8s garanti. Paiement en bitcoin.", "title": "Mock considered harmful", "abstract": "Les mocks, si puissants, mais un grand pouvoir implique un grand chaos le plus souvent.\nLes mocks font souvent plus de mal que de bien et ralentissent le d\u00e9veloppement en couplant les tests et l'impl\u00e9mentation. Les mocks, bien utilis\u00e9e avec d'autres bonne pratique tel que l'inversion de d\u00e9pendance peuvent au contraire rendre votre code plus facilement testable et ainsi plus robuste.\nLes mocks gardent une grande importance dans les tests applicatifs et avec les bonnes pratiques, vous pouvez en tirer le maximum.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Tr\u00e8s connu pour ses excellents travaux et ses dons, le marabout Boris peut soigner vos tests de leurs mocks, garantir le retour du statut vert aim\u00e9, r\u00e9duire la dur\u00e9e de vos tests et am\u00e9liorer vos relations avec votre sysadmin. Succ\u00e8s garanti. Paiement en bitcoin. </p></div>", "abstract_md": "<div class=\"abstract\"><p>Les mocks, si puissants, mais un grand pouvoir implique un grand chaos le plus souvent.</p>\n<p>Les mocks font souvent plus de mal que de bien et ralentissent le d\u00e9veloppement en couplant les tests et l'impl\u00e9mentation. Les mocks, bien utilis\u00e9e avec d'autres bonne pratique tel que l'inversion de d\u00e9pendance peuvent au contraire rendre votre code plus facilement testable et ainsi plus robuste.</p>\n<p>Les mocks gardent une grande importance dans les tests applicatifs et avec les bonnes pratiques, vous pouvez en tirer le maximum.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["vincent maillol"], "description": "Apprendre \u00e0 utiliser le module unittest", "title": "Utilisation de unittest", "abstract": "\u00c0 quoi servent les tests unitaires ?\nComment les \u00e9crire ?\nQuand utiliser Mock et quand ne pas l'utiliser ?\nUne conf\u00e9rence sur comment prendre en main le module unittest et qui conclue sur quelques astuces pour ne pas tomber dans le pi\u00e8ge d'avoir plus de tests \u00e0 maintenir que de code.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Apprendre \u00e0 utiliser le module unittest</p></div>", "abstract_md": "<div class=\"abstract\"><p>\u00c0 quoi servent les tests unitaires ?\nComment les \u00e9crire ?\nQuand utiliser Mock et quand ne pas l'utiliser ?</p>\n<p>Une conf\u00e9rence sur comment prendre en main le module unittest et qui conclue sur quelques astuces pour ne pas tomber dans le pi\u00e8ge d'avoir plus de tests \u00e0 maintenir que de code. </p></div>", "audience_level": "Novice"},
{"speakers": ["serge sans_paille", "pierrick brunet"], "description": "Pythran est un compilateur pour le Python scientifique qui se distingue par des performances importantes pour du code de haut niveau.\nCette pr\u00e9sentation se concentre sur les boucles, ou plut\u00f4t l'absence de boucle dans les codes num\u00e9riques, pourquoi on les \u00e9vite, ce que \u00e7a apporte, et pourquoi ce n'est pas si grave de les utiliser.", "title": "We don't need your loops", "abstract": "La boucle. Un pilier de la programation imp\u00e9rative. Et pourtant, les utilisateurs avertis de Numpy l'\u00e9vite comme la peste pour des raisons de performance. Heureusement, Numpy fournit de bonnes abstractions piur s'en passer dans pas mal de cas.\nLe but de cette pr\u00e9sentation est de montrer que le compilateur Pythran, un compilateur statique pour un langage embarqu\u00e9 dans le couple Python / Numpy et sp\u00e9cialis\u00e9 pour le code scientifique, est compatible avec cette approche, et qu'il en b\u00e9n\u00e9ficie m\u00eame pour g\u00e9n\u00e9rer du code plus efficace que s'il n'avait eu que les boucles \u00e0 disposition.\nOn tordra ainsi le cou \u00e0 un vieil adage qui dit que plus on est explicite dans sa description de l'algorithme, plus on saura tirer des perfs. En pratique, si on souhaite rester au niveau Python - Pythran est 100% retro-compatible Python - rester \u00e0 haut niveau n'est pas un frein.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Pythran est un compilateur pour le Python scientifique qui se distingue par des performances importantes pour du code de haut niveau.</p>\n<p>Cette pr\u00e9sentation se concentre sur les boucles, ou plut\u00f4t l'absence de boucle dans les codes num\u00e9riques, pourquoi on les \u00e9vite, ce que \u00e7a apporte, et pourquoi ce n'est pas si grave de les utiliser.</p></div>", "abstract_md": "<div class=\"abstract\"><p>La boucle. Un pilier de la programation imp\u00e9rative. Et pourtant, les utilisateurs avertis de Numpy l'\u00e9vite comme la peste pour des raisons de performance. Heureusement, Numpy fournit de bonnes abstractions piur s'en passer dans pas mal de cas.</p>\n<p>Le but de cette pr\u00e9sentation est de montrer que le compilateur Pythran, un compilateur statique pour un langage embarqu\u00e9 dans le couple Python / Numpy et sp\u00e9cialis\u00e9 pour le code scientifique, est compatible avec cette approche, et qu'il en b\u00e9n\u00e9ficie m\u00eame pour g\u00e9n\u00e9rer du code plus efficace que s'il n'avait eu que les boucles \u00e0 disposition.</p>\n<p>On tordra ainsi le cou \u00e0 un vieil adage qui dit que plus on est explicite dans sa description de l'algorithme, plus on saura tirer des perfs. En pratique, si on souhaite rester au niveau Python - Pythran est 100% retro-compatible Python - rester \u00e0 haut niveau n'est pas un frein.</p></div>", "audience_level": "Novice"},
{"speakers": ["Patrick Pierre", "Tien Hai Nguyen"], "description": "La Suite PubliForge est un outil complet permettant la gestion de fonds et documents, le travail collaboratif et la publication multisupports.", "title": "La suite PubliForge\u00a0: Python au service de la cr\u00e9ation et de la gestion de livres num\u00e9riques", "abstract": "La Suite PubliForge est un outil complet permettant la gestion de fonds et documents, le travail collaboratif et la publication multisupports.\nDisponible depuis avril 2012 et d\u00e9velopp\u00e9e par les ing\u00e9nieurs de la soci\u00e9t\u00e9 Prismallia, PubliForge est la seule plateforme de publication open source permettant la cr\u00e9ation, la gestion et la transformation de contenus. \nLors de notre pr\u00e9sentation, nous commencerons par vous pr\u00e9senter le produit en d\u00e9crivant le contexte sp\u00e9cifique qu'est celui de l'\u00e9dition papier et num\u00e9rique. Nous d\u00e9crirons ensuite les raisons pour lesquelles les ing\u00e9nieurs de Prismallia ont fait le choix du langage Python et du framework Pyramid pour le d\u00e9veloppement de cet outil. Nous aborderons notamment quelques techniques de d\u00e9veloppement (Pylint, PEP 8 et l'export XML). Enfin, nous verrons comment il est possible d'\u00e9tendre PubliForge soit par le biais de processeurs, soit par les ouvre-documents, par d\u00e9rivation ou encore par la cr\u00e9ation de nouveaux agents.\nPlus d'informations sur\u00a0:\nhttp://doc.publiforge.org/index.html\nhttps://pypi.python.org/pypi/PubliForge\nwww.prismallia.fr", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>La Suite PubliForge est un outil complet permettant la gestion de fonds et documents, le travail collaboratif et la publication multisupports.</p></div>", "abstract_md": "<div class=\"abstract\"><p>La Suite PubliForge est un outil complet permettant la gestion de fonds et documents, le travail collaboratif et la publication multisupports.\nDisponible depuis avril 2012 et d\u00e9velopp\u00e9e par les ing\u00e9nieurs de la soci\u00e9t\u00e9 Prismallia, PubliForge est la seule plateforme de publication open source permettant la cr\u00e9ation, la gestion et la transformation de contenus. </p>\n<p>Lors de notre pr\u00e9sentation, nous commencerons par vous pr\u00e9senter le produit en d\u00e9crivant le contexte sp\u00e9cifique qu'est celui de l'\u00e9dition papier et num\u00e9rique. Nous d\u00e9crirons ensuite les raisons pour lesquelles les ing\u00e9nieurs de Prismallia ont fait le choix du langage Python et du framework Pyramid pour le d\u00e9veloppement de cet outil. Nous aborderons notamment quelques techniques de d\u00e9veloppement (Pylint, PEP 8 et l'export XML). Enfin, nous verrons comment il est possible d'\u00e9tendre PubliForge soit par le biais de processeurs, soit par les ouvre-documents, par d\u00e9rivation ou encore par la cr\u00e9ation de nouveaux agents.</p>\n<p>Plus d'informations sur\u00a0:\n<a href=\"http://doc.publiforge.org/index.html\" title=\"DocPubliForge\">http://doc.publiforge.org/index.html</a>\n<a href=\"https://pypi.python.org/pypi/PubliForge\" title=\"Python PubliForge\">https://pypi.python.org/pypi/PubliForge</a>\n<a href=\"www.prismallia.fr\" title=\"Site web Prismallia\">www.prismallia.fr</a></p></div>", "audience_level": "Intermediate"},
{"speakers": ["Beno\u00eet Bryon"], "description": "Bug logiciel, configuration, probl\u00e8me du syst\u00e8me ou service tiers en panne ? Hospital s'inspire des tests unitaires pour g\u00e9n\u00e9rer des diagnostics sur des services en cours de fonctionnement.", "title": "Healthchecks : des \"tests\" en prod", "abstract": "Apr\u00e8s avoir d\u00e9ploy\u00e9 un projet, comment contr\u00f4ler que tout est op\u00e9rationnel ? Comment v\u00e9rifier le statut d'un service en cours de fonctionnement ? Ou bien, quand une erreur appara\u00eet, comment examiner le syst\u00e8me et trier les bugs issus du code, les typos dans la configuration ou encore les pannes des services tiers ? C'est la raison d'\u00eatre des \"healthchecks\".\n\"hospital\" introduit les healthchecks pour Python. D\u00e9couvrons ce que peut apporter cet outil et comment l'int\u00e9grer d'un c\u00f4t\u00e9 dans les projets Python et de l'autre c\u00f4t\u00e9 dans l'\u00e9cosyst\u00e8me du monitoring et de la supervision.\nPlus d'informations : https://hospital.readthedocs.org/", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Bug logiciel, configuration, probl\u00e8me du syst\u00e8me ou service tiers en panne ? Hospital s'inspire des tests unitaires pour g\u00e9n\u00e9rer des diagnostics sur des services en cours de fonctionnement.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Apr\u00e8s avoir d\u00e9ploy\u00e9 un projet, comment contr\u00f4ler que tout est op\u00e9rationnel ? Comment v\u00e9rifier le statut d'un service en cours de fonctionnement ? Ou bien, quand une erreur appara\u00eet, comment examiner le syst\u00e8me et trier les bugs issus du code, les typos dans la configuration ou encore les pannes des services tiers ? C'est la raison d'\u00eatre des \"healthchecks\".</p>\n<p>\"hospital\" introduit les healthchecks pour Python. D\u00e9couvrons ce que peut apporter cet outil et comment l'int\u00e9grer d'un c\u00f4t\u00e9 dans les projets Python et de l'autre c\u00f4t\u00e9 dans l'\u00e9cosyst\u00e8me du monitoring et de la supervision.</p>\n<p>Plus d'informations : https://hospital.readthedocs.org/</p></div>", "audience_level": "Novice"},
{"speakers": ["S\u00e9bastien Martinez", "Alexandre Manoury"], "description": "En temps normal, les programmes doivent \u00eatre red\u00e9marr\u00e9s pour \u00eatre mis \u00e0 jour. Comme c'est plut\u00f4t emb\u00eatant, nous vous proposons de mettre \u00e0 jour des programmes sans les arr\u00eater.\nNous allons voir comment accomplir une telle chose en vous pr\u00e9sentant notre version hack\u00e9e de l'interpr\u00e9teur CPython et sa tr\u00e8s ch\u00e8re amie, la biblioth\u00e8que Pymoult.", "title": "Mise \u00e0 jour \u00e0 chaud d'un animal \u00e0 sang froid ", "abstract": "Mettre \u00e0 jour des programmes n\u00e9cessite d'habitue de les arr\u00eater, les patcher puis les red\u00e9marrer. Cela devient vite un probl\u00e8me pour des programmes dont la disponibilit\u00e9 est critique (satellites en missions, serveurs ...). Une solution est alors de mettre \u00e0 jour ces programmes pendant leur ex\u00e9cution, sans les red\u00e9marrer. Au cours de cette pr\u00e9sentation, nous allons montrer comment une telle chose peut \u00eatre faite en Python. Nous pr\u00e9senterons Cpython-Dsu, notre version de Cpython \u00e9tendue par des m\u00e9canismes de mise \u00e0 jour dynamique que nous utilisons en combinaison avec la biblioth\u00e8que Pymoult.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>En temps normal, les programmes doivent \u00eatre red\u00e9marr\u00e9s pour \u00eatre mis \u00e0 jour. Comme c'est plut\u00f4t emb\u00eatant, nous vous proposons de mettre \u00e0 jour des programmes sans les arr\u00eater.\nNous allons voir comment accomplir une telle chose en vous pr\u00e9sentant notre version hack\u00e9e de l'interpr\u00e9teur CPython et sa tr\u00e8s ch\u00e8re amie, la biblioth\u00e8que Pymoult.  </p></div>", "abstract_md": "<div class=\"abstract\"><p>Mettre \u00e0 jour des programmes n\u00e9cessite d'habitue de les arr\u00eater, les patcher puis les red\u00e9marrer. Cela devient vite un probl\u00e8me pour des programmes dont la disponibilit\u00e9 est critique (satellites en missions, serveurs ...). Une solution est alors de mettre \u00e0 jour ces programmes pendant leur ex\u00e9cution, sans les red\u00e9marrer. Au cours de cette pr\u00e9sentation, nous allons montrer comment une telle chose peut \u00eatre faite en Python. Nous pr\u00e9senterons Cpython-Dsu, notre version de Cpython \u00e9tendue par des m\u00e9canismes de mise \u00e0 jour dynamique que nous utilisons en combinaison avec la biblioth\u00e8que Pymoult.</p></div>", "audience_level": "Experienced"},
{"speakers": ["Houz\u00e9fa Abbasbhay"], "description": "Tour d'horizon des diff\u00e9rentes techniques pour faire interfacer des programmes C / C++ avec Python.\nImpl\u00e9mentation \"a la mano\".\nDiff\u00e9rences entre Python 2 et Python 3 (dans le cadre de ces interfaces).\ncpython\nctypes\nNotion de \"bindings\"\nSWIG\nBon design d'une interface Python pour \u00e9tendre un programme C / C++.\nMulti-threading (dans le cadre de ces interfaces", "title": "C / C++ et Python", "abstract": "Tour d'horizon des diff\u00e9rentes techniques pour faire interfacer des programmes C / C++ avec Python.\nImpl\u00e9mentation \"a la mano\".\nDiff\u00e9rences entre Python 2 et Python 3 (dans le cadre de ces interfaces).\ncpython\nctypes\nNotion de \"bindings\"\nSWIG\nBon design d'une interface Python pour \u00e9tendre un programme C / C++.\nMulti-threading (dans le cadre de ces interfaces", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><ul>\n<li>Tour d'horizon des diff\u00e9rentes techniques pour faire interfacer des programmes C / C++ avec Python.</li>\n<li>Impl\u00e9mentation \"a la mano\".</li>\n<li>Diff\u00e9rences entre Python 2 et Python 3 (dans le cadre de ces interfaces).</li>\n<li>cpython</li>\n<li>ctypes</li>\n<li>Notion de \"bindings\"</li>\n<li>SWIG</li>\n<li>Bon design d'une interface Python pour \u00e9tendre un programme C / C++.</li>\n<li>Multi-threading (dans le cadre de ces interfaces</li>\n</ul></div>", "abstract_md": "<div class=\"abstract\"><ul>\n<li>Tour d'horizon des diff\u00e9rentes techniques pour faire interfacer des programmes C / C++ avec Python.</li>\n<li>Impl\u00e9mentation \"a la mano\".</li>\n<li>Diff\u00e9rences entre Python 2 et Python 3 (dans le cadre de ces interfaces).</li>\n<li>cpython</li>\n<li>ctypes</li>\n<li>Notion de \"bindings\"</li>\n<li>SWIG</li>\n<li>Bon design d'une interface Python pour \u00e9tendre un programme C / C++.</li>\n<li>Multi-threading (dans le cadre de ces interfaces</li>\n</ul></div>", "audience_level": "Novice"},
{"speakers": ["Arthur Lutz"], "description": "Introduction et d\u00e9mo de MicroPython sur une PyBoard. \nMicroPython est une impl\u00e9mentation de Python3.4 pour microcontr\u00f4leurs (principalement la PyBoard carte en OpenHardware). \nVenez faire clignoter des LEDs et bouger des moteurs directement depuis le prompt python !", "title": "Marre de faire du C++ sur une Arduino ? Faites du Python avec MicroPython sur une PyBoard", "abstract": "Pr\u00e9sentation de l'historique du projet\nD\u00e9tails de l'architecture mat\u00e9rielle\nD\u00e9monstrations sur une carte", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Introduction et d\u00e9mo de MicroPython sur une PyBoard. </p>\n<p>MicroPython est une impl\u00e9mentation de Python3.4 pour microcontr\u00f4leurs (principalement la PyBoard carte en OpenHardware). </p>\n<p>Venez faire clignoter des LEDs et bouger des moteurs directement depuis le prompt python !</p></div>", "abstract_md": "<div class=\"abstract\"><p>Pr\u00e9sentation de l'historique du projet</p>\n<p>D\u00e9tails de l'architecture mat\u00e9rielle</p>\n<p>D\u00e9monstrations sur une carte</p></div>", "audience_level": "Novice"},
{"speakers": ["Olivier Grisel"], "description": "Petit guide pratique pour construire et tester des paquets wheel pour toutes les plateformes classique en utilisant des syst\u00e8mes d'int\u00e9gration continue gratuits tels que Travis CI (Linux et OSX) et AppVeyor (Windows).", "title": "Construire et tester des wheels sous Linux, OSX et Windows", "abstract": "Les wheels sont un nouveau format standard (PEP 427) de distribution de package Python pour remplacer les eggs. Ils sont support\u00e9s par pip >= 1.4 et setuptools >= 0.8. Le format wheel est officiellement recommand\u00e9 pour la distribution de projets Python sur PyPI.\nLe format wheel permet d\u2019acc\u00e9l\u00e9rer l'installation de paquets Python sur toutes les plateformes. Les projets utilisant des extensions compil\u00e9es sont packag\u00e9s avec des wheel d\u00e9di\u00e9e \u00e0 une plateforme donn\u00e9e (par exemple Windows 32 bit) ce qui permet de les installer sans compilateur.\nEn tant que release manager pour le projet scikit-learn j'ai mis en place une infrastructure d'int\u00e9gration continue qui g\u00e9n\u00e8re et teste des paquets wheel pour les plateformes Windows, OSX et Linux. Cette infrastructure permet de supporter les versions r\u00e9centes de Python (2.6+ et 3.3+) sur des architecture 32 bit et 64 bit.\nLe but de cette pr\u00e9sentation est de partager cette exp\u00e9rience et les outils que j'ai d\u00e9velopper pour automatiser le fonctionnement de cette infrastructure.\nCette pr\u00e9sentation sera un version actualis\u00e9e de la pr\u00e9sentation que j'ai donn\u00e9e \u00e0 PyCon 2015: \nhttps://www.youtube.com/watch?v=d-p6lJJObLU", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Petit guide pratique pour construire et tester des paquets wheel pour toutes les plateformes classique en utilisant des syst\u00e8mes d'int\u00e9gration continue gratuits tels que Travis CI (Linux et OSX) et AppVeyor (Windows).</p></div>", "abstract_md": "<div class=\"abstract\"><p>Les wheels sont un nouveau format <a href=\"http://legacy.python.org/dev/peps/pep-0427/\">standard (PEP 427)</a> de distribution de package Python pour remplacer les eggs. Ils sont support\u00e9s par pip &gt;= 1.4 et setuptools &gt;= 0.8. Le format wheel est officiellement recommand\u00e9 pour la distribution de projets Python sur PyPI.</p>\n<p>Le format wheel permet d\u2019acc\u00e9l\u00e9rer l'installation de paquets Python sur toutes les plateformes. Les projets utilisant des extensions compil\u00e9es sont packag\u00e9s avec des wheel d\u00e9di\u00e9e \u00e0 une plateforme donn\u00e9e (par exemple Windows 32 bit) ce qui permet de les installer sans compilateur.</p>\n<p>En tant que release manager pour le projet scikit-learn j'ai mis en place une infrastructure d'int\u00e9gration continue qui g\u00e9n\u00e8re et teste des paquets wheel pour les plateformes Windows, OSX et Linux. Cette infrastructure permet de supporter les versions r\u00e9centes de Python (2.6+ et 3.3+) sur des architecture 32 bit et 64 bit.</p>\n<p>Le but de cette pr\u00e9sentation est de partager cette exp\u00e9rience et les outils que j'ai d\u00e9velopper pour automatiser le fonctionnement de cette infrastructure.</p>\n<p>Cette pr\u00e9sentation sera un version actualis\u00e9e de la pr\u00e9sentation que j'ai donn\u00e9e \u00e0 PyCon 2015: \nhttps://www.youtube.com/watch?v=d-p6lJJObLU</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Christophe de Vienne"], "description": "Profitez du meilleur de CubicWeb depuis une application Pyramid.", "title": "Pyramid & Cubicweb", "abstract": "CubicWeb \u00e9volue et rejoint les standards du python web moderne.\nCubicWeb a fait le choix de Pyramid, et les possibilit\u00e9s offertes par cette r\u00e9union de famille (tous deux sont descendants de Zope) sont nombreuses.\nD\u00e9couvrez comment embarquer une base de donn\u00e9es s\u00e9mantique, et toute la puissance de RQL et des permissions de CubicWeb, dans une application Pyramid.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Profitez du meilleur de CubicWeb depuis une application Pyramid.</p></div>", "abstract_md": "<div class=\"abstract\"><p>CubicWeb \u00e9volue et rejoint les standards du python web moderne.</p>\n<p>CubicWeb a fait le choix de Pyramid, et les possibilit\u00e9s offertes par cette r\u00e9union de famille (tous deux sont descendants de Zope) sont nombreuses.</p>\n<p>D\u00e9couvrez comment embarquer une base de donn\u00e9es s\u00e9mantique, et toute la puissance de RQL et des permissions de CubicWeb, dans une application Pyramid.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["K.I.A Derouiche"], "description": "Dans cet expos\u00e9, nous parlerons et pr\u00e9senterons sympy.physics.mechanics et sympy.physics.vector deux modules de la biblioth\u00e8que symbolique SymPy et PyDy (Multibody Dynamics) ensembles d'outils fournissant des m\u00e9thodes et techniques pour l\u2019enseignement et la recherche en physique,le  contr\u00f4le optimal et l'ing\u00e9nierie.Quelques exemples concrets d'utilisation vous seront pr\u00e9sent\u00e9s.", "title": "Pendule m\u00e9canique,  inertie, mouvements de robot: une mod\u00e9lisation de la m\u00e9canique avec SymPy", "abstract": "SymPy.physics.mechanics et SymPy.physics.vector, modules de la biblioth\u00e8que symbolique SymPy, contiennent de nombreuses classes et m\u00e9thodes de m\u00e9canique classique (cin\u00e9matique, manipulations vectorielles, solides et points mat\u00e9riels, approches variationnelles, espace de configuration, etc.). Ces deux modules constituent le noyau de PyDy (Multibody Dynamics) qui est un outil combinant \u00e0 la fois NumPy, SciPy et IPython en fournissant des m\u00e9thodes et techniques pour l\u2019enseignement, la recherche en physique, la cin\u00e9matique en robotique, la navigation des vaisseaux spatiaux et des  machines de fabrications pour l'industrie.\nPour un d\u00e9veloppeur d'application scientifique , un \u00e9tudiant ou un chercheur, les avantages sont nombreux : l'accessibilit\u00e9 des sources. L'approche symbolique et num\u00e9rique rend le calcul beaucoup plus facile pour de nombreux syst\u00e8mes dynamiques. Les avantages p\u00e9dagogiques sont aussi nombreux : il sera \u00e9galement l'occasion de voir que, en apprenant SymPy, Numpy et Scipy, on apprend l'algorithmique num\u00e9rique et Python. Cette pr\u00e9sentation montrera la facilit\u00e9 de mod\u00e9liser des syst\u00e8mes dynamiques \u00e0 partir d'exemples concrets. SymPy permettant de tout connecter, PyDy, une boite \u00e0 outil incluent du code pour la simulation et la visualisation, IPython notebook interagissent pour la publication des donn\u00e9es et du code.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Dans cet expos\u00e9, nous parlerons et pr\u00e9senterons sympy.physics.mechanics et sympy.physics.vector deux modules de la biblioth\u00e8que symbolique SymPy et PyDy (Multibody Dynamics) ensembles d'outils fournissant des m\u00e9thodes et techniques pour l\u2019enseignement et la recherche en physique,le  contr\u00f4le optimal et l'ing\u00e9nierie.Quelques exemples concrets d'utilisation vous seront pr\u00e9sent\u00e9s. </p></div>", "abstract_md": "<div class=\"abstract\"><p><strong>SymPy.physics.mechanics</strong> et <strong>SymPy.physics.vector</strong>, modules de la biblioth\u00e8que symbolique SymPy, contiennent de nombreuses classes et m\u00e9thodes de m\u00e9canique classique (cin\u00e9matique, manipulations vectorielles, solides et points mat\u00e9riels, approches variationnelles, espace de configuration, etc.). Ces deux modules constituent le noyau de PyDy (Multibody Dynamics) qui est un outil combinant \u00e0 la fois NumPy, SciPy et IPython en fournissant des m\u00e9thodes et techniques pour l\u2019enseignement, la recherche en physique, la cin\u00e9matique en robotique, la navigation des vaisseaux spatiaux et des  machines de fabrications pour l'industrie.</p>\n<p>Pour un d\u00e9veloppeur d'application scientifique , un \u00e9tudiant ou un chercheur, les avantages sont nombreux : l'accessibilit\u00e9 des sources. L'approche symbolique et num\u00e9rique rend le calcul beaucoup plus facile pour de nombreux syst\u00e8mes dynamiques. Les avantages p\u00e9dagogiques sont aussi nombreux : il sera \u00e9galement l'occasion de voir que, en apprenant SymPy, Numpy et Scipy, on apprend l'algorithmique num\u00e9rique et Python. Cette pr\u00e9sentation montrera la facilit\u00e9 de mod\u00e9liser des syst\u00e8mes dynamiques \u00e0 partir d'exemples concrets. SymPy permettant de tout connecter, PyDy, une boite \u00e0 outil incluent du code pour la simulation et la visualisation, IPython notebook interagissent pour la publication des donn\u00e9es et du code.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Rodolphe Qui\u00e9deville"], "description": "Comment d\u00e9buguer les probl\u00e8mes de performance li\u00e9s aux bases de donn\u00e9es avec Django", "title": "SQL Debug avec Django", "abstract": "L'ORM de Django est particuli\u00e8rement efficace, il permet au d\u00e9veloppeur de compl\u00e8tement abstraire la couche de stockage de donn\u00e9es au point de pouvoir utiliser le m\u00eame code avec SQLite, PostgreSQL ou d'autres bases plus exotiques encore.\nLorsque les probl\u00e8mes de performance surviennent faire le chemin inverse depuis la base vers le code devient un v\u00e9ritable chemin de croix.\nOn verra dans cette pr\u00e9sentation comment se faciliter la vie avec quelques outils et m\u00e9thodes.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Comment d\u00e9buguer les probl\u00e8mes de performance li\u00e9s aux bases de donn\u00e9es avec Django</p></div>", "abstract_md": "<div class=\"abstract\"><p>L'ORM de Django est particuli\u00e8rement efficace, il permet au d\u00e9veloppeur de compl\u00e8tement abstraire la couche de stockage de donn\u00e9es au point de pouvoir utiliser le m\u00eame code avec SQLite, PostgreSQL ou d'autres bases plus exotiques encore.\nLorsque les probl\u00e8mes de performance surviennent faire le chemin inverse depuis la base vers le code devient un v\u00e9ritable chemin de croix.\nOn verra dans cette pr\u00e9sentation comment se faciliter la vie avec quelques outils et m\u00e9thodes.</p></div>", "audience_level": "Experienced"},
{"speakers": ["Yann Vot\u00e9"], "description": "Nous introduirons une nouvelle m\u00e9thode pour importer des donn\u00e9es externes (service REST, fichier, etc.) dans une application. Simple et flexible, elle favorise la r\u00e9utilisation des composants afin de se concentrer sur ce qui est sp\u00e9cifique \u00e0 chaque cas. Un exemple d'impl\u00e9mentation sera donn\u00e9 avec le framework CubicWeb 3.21 qui introduit une API d'import de donn\u00e9es fond\u00e9e sur cette m\u00e9thode.", "title": "Importer des donn\u00e9es en Python avec CubicWeb 3.21", "abstract": "Il est courant pour un d\u00e9veloppeur de devoir impl\u00e9menter des\nfonctionnalit\u00e9s d'import de donn\u00e9es. Les utilisateurs peuvent en effet avoir\nbesoin de donn\u00e9es disponibles par ailleurs, dans un tableur par exemple,\ndans une autre base, ou accessibles par des services web.\nNous introduisons ici une m\u00e9thode simple pour r\u00e9aliser cela en favorisant\nla g\u00e9n\u00e9ricit\u00e9 et la r\u00e9-utilisabilit\u00e9 des composants d\u00e9velopp\u00e9s.\nUn flux personnalisable d'entit\u00e9s\nL'id\u00e9e est de transformer petit \u00e0 petit les donn\u00e9es externes afin de les\nrendre compatibles avec le sch\u00e9ma de l'application et donc ins\u00e9rables en\nbase.\nLe principe est de commencer par stocker les donn\u00e9es de la source sur une\n\u00ab[HTML_REMOVED]entit\u00e9 externe[HTML_REMOVED]\u00bb. Puis on utilise des g\u00e9n\u00e9rateurs Python pour\ncr\u00e9er un \u00ab[HTML_REMOVED]flux[HTML_REMOVED]\u00bb d'entit\u00e9s[HTML_REMOVED]: chaque entit\u00e9 passe de fonction\nen fonction, ce qui va la transformer peu \u00e0 peu pour la rapprocher du mod\u00e8le\nattendu et qu'elle soit finalement pr\u00eate \u00e0 \u00eatre ins\u00e9r\u00e9e, ou au contraire\nrejet\u00e9e si ce n'est pas possible.\nL'\u00e9tape d'insertion est alors identique, quelle que soit la source d'o\u00f9\nproviennent les donn\u00e9es.\nExemple avec CubicWeb 3.21\nAvec sa version 3.21 sortie en 2015, le framework CubicWeb dispose d'une\ntoute nouvelle API fond\u00e9e sur cette m\u00e9thode. Elle permet au d\u00e9veloppeur de se\nconcentrer sur le flux de donn\u00e9es provenant des sources qui l'int\u00e9ressent.\nDe plus, l'\u00e9tape d'insertion offre plusieurs composants\ninterchangeables. En fonction du compromis qu'il souhaite faire entre s\u00e9curit\u00e9\net rapidit\u00e9, le d\u00e9veloppeur peut choisir entre une insertion s\u00fbre mais lente,\no\u00f9 chaque entit\u00e9 \u00e0 ins\u00e9rer est pr\u00e9alablement v\u00e9rifi\u00e9e quant au type de ses\ndonn\u00e9es et la validit\u00e9 de ses relations, et une insertion plus rapide mais\npouvant \u00e9chouer, o\u00f9 les entit\u00e9s sont ins\u00e9r\u00e9es en masse.\nTout cela sera illustr\u00e9 par le moissonnage des donn\u00e9es de portails\nOpen Data. La diversit\u00e9 des formats (RDF (open-data.europa.eu),\nREST (data.gouv.fr, OpenDataSoft), CSW (geocatalogue.fr), etc.) ainsi que des\nmod\u00e8les de donn\u00e9es impose de cr\u00e9er des flux diff\u00e9rents afin que toutes ces\ndonn\u00e9es puissent \u00eatre import\u00e9es dans un sch\u00e9ma unique de CubicWeb.\nDe la m\u00eame fa\u00e7on, un autre exemple sera l'import de donn\u00e9es SKOS o\u00f9 des\nthesaurus entiers sont import\u00e9s dans CubicWeb gr\u00e2ce \u00e0 cette API.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Nous introduirons une nouvelle m\u00e9thode pour importer des donn\u00e9es externes (service REST, fichier, etc.) dans une application. Simple et flexible, elle favorise la r\u00e9utilisation des composants afin de se concentrer sur ce qui est sp\u00e9cifique \u00e0 chaque cas. Un exemple d'impl\u00e9mentation sera donn\u00e9 avec le framework CubicWeb 3.21 qui introduit une API d'import de donn\u00e9es fond\u00e9e sur cette m\u00e9thode.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Il est courant pour un d\u00e9veloppeur de devoir impl\u00e9menter des\nfonctionnalit\u00e9s d'import de donn\u00e9es. Les utilisateurs peuvent en effet avoir\nbesoin de donn\u00e9es disponibles par ailleurs, dans un tableur par exemple,\ndans une autre base, ou accessibles par des services web.\nNous introduisons ici une m\u00e9thode simple pour r\u00e9aliser cela en favorisant\nla g\u00e9n\u00e9ricit\u00e9 et la r\u00e9-utilisabilit\u00e9 des composants d\u00e9velopp\u00e9s.</p>\n<h2>Un flux personnalisable d'entit\u00e9s</h2>\n<p>L'id\u00e9e est de transformer petit \u00e0 petit les donn\u00e9es externes afin de les\nrendre compatibles avec le sch\u00e9ma de l'application et donc ins\u00e9rables en\nbase.</p>\n<p>Le principe est de commencer par stocker les donn\u00e9es de la source sur une\n\u00ab[HTML_REMOVED]entit\u00e9 externe[HTML_REMOVED]\u00bb. Puis on utilise des g\u00e9n\u00e9rateurs Python pour\ncr\u00e9er un \u00ab[HTML_REMOVED]flux[HTML_REMOVED]\u00bb d'entit\u00e9s[HTML_REMOVED]: chaque entit\u00e9 passe de fonction\nen fonction, ce qui va la transformer peu \u00e0 peu pour la rapprocher du mod\u00e8le\nattendu et qu'elle soit finalement pr\u00eate \u00e0 \u00eatre ins\u00e9r\u00e9e, ou au contraire\nrejet\u00e9e si ce n'est pas possible.</p>\n<p>L'\u00e9tape d'insertion est alors identique, quelle que soit la source d'o\u00f9\nproviennent les donn\u00e9es.</p>\n<h2>Exemple avec CubicWeb 3.21</h2>\n<p>Avec sa version 3.21 sortie en 2015, le framework CubicWeb dispose d'une\ntoute nouvelle API fond\u00e9e sur cette m\u00e9thode. Elle permet au d\u00e9veloppeur de se\nconcentrer sur le flux de donn\u00e9es provenant des sources qui l'int\u00e9ressent.</p>\n<p>De plus, l'\u00e9tape d'insertion offre plusieurs composants\ninterchangeables. En fonction du compromis qu'il souhaite faire entre s\u00e9curit\u00e9\net rapidit\u00e9, le d\u00e9veloppeur peut choisir entre une insertion s\u00fbre mais lente,\no\u00f9 chaque entit\u00e9 \u00e0 ins\u00e9rer est pr\u00e9alablement v\u00e9rifi\u00e9e quant au type de ses\ndonn\u00e9es et la validit\u00e9 de ses relations, et une insertion plus rapide mais\npouvant \u00e9chouer, o\u00f9 les entit\u00e9s sont ins\u00e9r\u00e9es en masse.</p>\n<p>Tout cela sera illustr\u00e9 par le moissonnage des donn\u00e9es de portails\n<em>Open Data</em>. La diversit\u00e9 des formats (RDF (open-data.europa.eu),\nREST (data.gouv.fr, OpenDataSoft), CSW (geocatalogue.fr), etc.) ainsi que des\nmod\u00e8les de donn\u00e9es impose de cr\u00e9er des flux diff\u00e9rents afin que toutes ces\ndonn\u00e9es puissent \u00eatre import\u00e9es dans un sch\u00e9ma unique de CubicWeb.</p>\n<p>De la m\u00eame fa\u00e7on, un autre exemple sera l'import de donn\u00e9es SKOS o\u00f9 des\nthesaurus entiers sont import\u00e9s dans CubicWeb gr\u00e2ce \u00e0 cette API.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Julien Aupetit"], "description": "Pr\u00e9sentation du projet open-source Switch qui permet de s\u00e9lectionner des DNS de diff\u00e9rents pays et d'en changer en quelques clics. Le but ici est d'expliquer ce qu'est PyQt, qui est utilis\u00e9 dans ce projet, et ses fondamentaux. Comment cr\u00e9er son interface, comment g\u00e9rer les interactions de l'utilisateur. Le tout en prenant exemple sur le cas concret du projet Switch.", "title": "Switch, ou Se jeter \u00e0 l'eau avec PyQT", "abstract": "Introduction ~ 4min\npr\u00e9sentation personnelle, pr\u00e9sentation de Switch et de son id\u00e9e,\npr\u00e9sentation rapide de Qt et PyQt\nQtDesigner ~8min\nComment j'ai utiliser QtDesigner pour cr\u00e9er mon interface. quelles sont les possibilit\u00e9s de customisation.\nInt\u00e9raction ~3min\nComment j'ai connect\u00e9 les actions de l'utilisateur \u00e0 des fonctions/m\u00e9thodes\nTips sur la gestion de la tabulation dans une interface graphique\nLe reste moins important ~3min\nComment je me suis servie de la barre des t\u00e2ches avec PyQt (ic\u00f4ne, menu)\nos.system() ou subprocess ? \nConclusion ~2min\nc'est simple, lancez vous.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Pr\u00e9sentation du projet open-source Switch qui permet de s\u00e9lectionner des DNS de diff\u00e9rents pays et d'en changer en quelques clics. Le but ici est d'expliquer ce qu'est PyQt, qui est utilis\u00e9 dans ce projet, et ses fondamentaux. Comment cr\u00e9er son interface, comment g\u00e9rer les interactions de l'utilisateur. Le tout en prenant exemple sur le cas concret du projet Switch.</p></div>", "abstract_md": "<div class=\"abstract\"><h3>Introduction ~ 4min</h3>\n<p>pr\u00e9sentation personnelle, pr\u00e9sentation de Switch et de son id\u00e9e,\npr\u00e9sentation rapide de Qt et PyQt</p>\n<h3>QtDesigner ~8min</h3>\n<p>Comment j'ai utiliser QtDesigner pour cr\u00e9er mon interface. quelles sont les possibilit\u00e9s de customisation.</p>\n<h3>Int\u00e9raction ~3min</h3>\n<p>Comment j'ai connect\u00e9 les actions de l'utilisateur \u00e0 des fonctions/m\u00e9thodes\nTips sur la gestion de la tabulation dans une interface graphique</p>\n<h3>Le reste moins important ~3min</h3>\n<p>Comment je me suis servie de la barre des t\u00e2ches avec PyQt (ic\u00f4ne, menu)\nos.system() ou subprocess ? </p>\n<h3>Conclusion ~2min</h3>\n<p>c'est simple, lancez vous.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["LEMAIRE Arnaud"], "description": "Les boucles, tout le monde les utilise pour transformer de large collection. \nEt si vous les abandonniez en gagnant par la m\u00eame occasion en clart\u00e9\u2009? \nEt si vous pouviez appliquer les m\u00eames transformations sur des ensembles infinis tout en am\u00e9liorant drastiquement les performances\u2009?\nPar refactoring successif, nous passerons des boucles aux filtres et pipelines pour cl\u00f4turer sur les transducers.", "title": "Des boucles aux tranducers", "abstract": "Pr\u00e9sentation de l\u2019\u00e9tude de cas\nPourquoi les boucles ne sont pas la bonne mani\u00e8re d\u2019organiser son code ?\nIntroduction de la notion de fonction d\u2019ordre sup\u00e9rieure\nPr\u00e9sentation de map, et refactoring associ\u00e9 (sur le cas initial)\nPr\u00e9sentation de filter, et refactoring associ\u00e9 (sur le cas initial)\nPr\u00e9sentation de reduce, et refactoring associ\u00e9 (sur le cas initial)\nPr\u00e9sentation de reduce sur un cas non trivial (avec accumulateur non scalaire)\n\u00c9num\u00e9ration des pattern typiques pr\u00e9sents dans le code permettant un refactoring vers les fonctions d\u00e9j\u00e0 pr\u00e9sent\u00e9es.\nChainage des fonctions, architecture pipeline & filter\nExpression de map en fonction de reduce\nExpression de filter en fonction de reduce\nFonction de composition\nIntroduction aux transducers\nRefactoring du code de d\u00e9part \u00e0 l\u2019aide des transducers\nAvantages des transducers \nTransducers statefull \nQuestions", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Les boucles, tout le monde les utilise pour transformer de large collection. \nEt si vous les abandonniez en gagnant par la m\u00eame occasion en clart\u00e9\u2009? \nEt si vous pouviez appliquer les m\u00eames transformations sur des ensembles infinis tout en am\u00e9liorant drastiquement les performances\u2009?\nPar refactoring successif, nous passerons des boucles aux filtres et pipelines pour cl\u00f4turer sur les transducers.</p></div>", "abstract_md": "<div class=\"abstract\"><ul>\n<li>Pr\u00e9sentation de l\u2019\u00e9tude de cas</li>\n<li>Pourquoi les boucles ne sont pas la bonne mani\u00e8re d\u2019organiser son code ?</li>\n<li>Introduction de la notion de fonction d\u2019ordre sup\u00e9rieure</li>\n<li>Pr\u00e9sentation de map, et refactoring associ\u00e9 (sur le cas initial)</li>\n<li>Pr\u00e9sentation de filter, et refactoring associ\u00e9 (sur le cas initial)</li>\n<li>Pr\u00e9sentation de reduce, et refactoring associ\u00e9 (sur le cas initial)</li>\n<li>Pr\u00e9sentation de reduce sur un cas non trivial (avec accumulateur non scalaire)</li>\n<li>\u00c9num\u00e9ration des pattern typiques pr\u00e9sents dans le code permettant un refactoring vers les fonctions d\u00e9j\u00e0 pr\u00e9sent\u00e9es.</li>\n<li>Chainage des fonctions, architecture pipeline &amp; filter</li>\n<li>Expression de map en fonction de reduce</li>\n<li>Expression de filter en fonction de reduce</li>\n<li>Fonction de composition</li>\n<li>Introduction aux transducers</li>\n<li>Refactoring du code de d\u00e9part \u00e0 l\u2019aide des transducers</li>\n<li>Avantages des transducers </li>\n<li>Transducers statefull </li>\n<li>Questions</li>\n</ul></div>", "audience_level": "Intermediate"},
{"speakers": ["Alex Marandon"], "description": "La programmation bas\u00e9e sur les entr\u00e9es/sorties asynchrones en Python : cas d'utilisations, fonctionnement interne, contraintes et styles de programmation.", "title": "D\u00e9mystifier les entr\u00e9es/sorties asynchrones", "abstract": "Programmation asynchrone, entr\u00e9es/sorties non-bloquantes, boucle d'\u00e9v\u00e9nements, beaucoup de d\u00e9veloppeurs ont rencontr\u00e9 ces expressions sans forc\u00e9ment savoir de quoi il s'agit concr\u00e8tement. Mis \u00e0 la mode par Node.js, les serveurs web asynchrones ont des caract\u00e9ristiques particuli\u00e8res et ne viennent pas sans contraintes. \nDans cette pr\u00e9sentation, je commencerai par expliquer \u00e0 l'aide d'analogies en quoi consiste les entr\u00e9es/sorties asynchrones, quels probl\u00e8mes elles peuvent r\u00e9soudre et quels probl\u00e8mes elles ne r\u00e9solvent pas. Nous verrons ensuite quelques exemples d'utilisation simples puis nous \u00e9tudierons le fonctionnement interne d'une boucle d'\u00e9v\u00e9nements d'entr\u00e9es/sorties. \nLes bases \u00e9tant pos\u00e9es, nous explorerons alors les diff\u00e9rents styles de programmation possibles en nous basant sur des exemples plus avanc\u00e9s bas\u00e9s sur les frameworks Tornado et aiohttp, jusqu'\u00e0 pr\u00e9senter les nouveaux mot-cl\u00e9s async/await de Python 3.5. Chaque exemple sera accompagn\u00e9 d'une mesure de performance mettant en \u00e9vidence l'impact de l'utilisation des entr\u00e9es/sorties asynchrones.\nPour illustrer les notions abord\u00e9es par des cas d'utilisation r\u00e9els, je pr\u00e9senterais deux projets auxquels j'ai contribu\u00e9 dans le cadre de ma mission \u00e0 M\u00e9t\u00e9o France et qui utilisent les entr\u00e9es/sorties asynchrones de mani\u00e8re atypique : le gestionnaire de processus Circus et le proxy HTTP THR.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>La programmation bas\u00e9e sur les entr\u00e9es/sorties asynchrones en Python : cas d'utilisations, fonctionnement interne, contraintes et styles de programmation.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Programmation asynchrone, entr\u00e9es/sorties non-bloquantes, boucle d'\u00e9v\u00e9nements, beaucoup de d\u00e9veloppeurs ont rencontr\u00e9 ces expressions sans forc\u00e9ment savoir de quoi il s'agit concr\u00e8tement. Mis \u00e0 la mode par Node.js, les serveurs web asynchrones ont des caract\u00e9ristiques particuli\u00e8res et ne viennent pas sans contraintes. </p>\n<p>Dans cette pr\u00e9sentation, je commencerai par expliquer \u00e0 l'aide d'analogies en quoi consiste les entr\u00e9es/sorties asynchrones, quels probl\u00e8mes elles peuvent r\u00e9soudre et quels probl\u00e8mes elles ne r\u00e9solvent pas. Nous verrons ensuite quelques exemples d'utilisation simples puis nous \u00e9tudierons le fonctionnement interne d'une boucle d'\u00e9v\u00e9nements d'entr\u00e9es/sorties. </p>\n<p>Les bases \u00e9tant pos\u00e9es, nous explorerons alors les diff\u00e9rents styles de programmation possibles en nous basant sur des exemples plus avanc\u00e9s bas\u00e9s sur les frameworks <a href=\"http://www.tornadoweb.org/\">Tornado</a> et <a href=\"http://aiohttp.readthedocs.org/\">aiohttp</a>, jusqu'\u00e0 pr\u00e9senter les nouveaux mot-cl\u00e9s <a href=\"http://makina-corpus.com/blog/metier/2015/python-http-server-with-the-new-async-await-syntax\">async/await</a> de Python 3.5. Chaque exemple sera accompagn\u00e9 d'une mesure de performance mettant en \u00e9vidence l'impact de l'utilisation des entr\u00e9es/sorties asynchrones.</p>\n<p>Pour illustrer les notions abord\u00e9es par des cas d'utilisation r\u00e9els, je pr\u00e9senterais deux projets auxquels j'ai contribu\u00e9 dans le cadre de ma mission \u00e0 M\u00e9t\u00e9o France et qui utilisent les entr\u00e9es/sorties asynchrones de mani\u00e8re atypique : le gestionnaire de processus <a href=\"http://circus.readthedocs.org/en/latest/\">Circus</a> et le proxy HTTP <a href=\"http://thr.readthedocs.org/en/latest/\">THR</a>.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Anael  Lorimier"], "description": "R\u00e9solvez le probl\u00e8me du TSP en Python avec OSRM, PyTSP et or-tools. Mini app Pyramid", "title": "osrm, le routing par excellence : int\u00e9gration de routage dynamique sur une appli web", "abstract": "R\u00e9solvez le probl\u00e8me du TSP en Python avec OSRM, PyTSP et or-tools. Mini app Pyramid", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>R\u00e9solvez le probl\u00e8me du TSP en Python avec OSRM, PyTSP et or-tools. Mini app Pyramid</p></div>", "abstract_md": "<div class=\"abstract\"><p>R\u00e9solvez le probl\u00e8me du TSP en Python avec OSRM, PyTSP et or-tools. Mini app Pyramid</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Pierre-Yves David"], "description": "Depuis 10 ans, le logiciel Mercurial utilise, profite et abuse du language\nPython. Nous vous proposons une r\u00e9trospective des pi\u00e9g\u00e9s dans lequel nous sommes\ntomb\u00e9, des petits trucs pour am\u00e9liorer nos performance et de toute les astuces\npythonesques qui nous ont donner plus de flexibilit\u00e9.", "title": "10 ans d'astuce et d'abus, Mercurial jongle avec Python", "abstract": "Depuis 2005, les d\u00e9veloppeurs de Mercurial profitent et abusent de Python. Cela laisse largement assez de temps pour explorer diff\u00e9rent aspect du langage et d\u00e9couvrir de nombreuse blagues. Certaine des id\u00e9es ont \u00e9t\u00e9 de francs succ\u00e8s, au point d'\u00eatre int\u00e9gr\u00e9es aux futures versions du langages, d'autre ont \u00e9t\u00e9 d'affreuses erreurs que nous essayons encore d'\u00e9radiquer aujourd'hui.\nCette pr\u00e9sentation se concentrera sur deux aspects de la relation entre Python et Mercurial. Nous traiterons d'abord des pi\u00e8ges et astuces \u00e0 propos des performances de Python. Puis nous \u00e9tudierons les avantages et inconv\u00e9nients du language en termes de flexibilit\u00e9 (introspection, monkey-patching, syntaxe, etc) dans le contexte de Mercurial.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Depuis 10 ans, le logiciel Mercurial utilise, profite et abuse du language\nPython. Nous vous proposons une r\u00e9trospective des pi\u00e9g\u00e9s dans lequel nous sommes\ntomb\u00e9, des petits trucs pour am\u00e9liorer nos performance et de toute les astuces\npythonesques qui nous ont donner plus de flexibilit\u00e9.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Depuis 2005, les d\u00e9veloppeurs de Mercurial profitent et abusent de Python. Cela laisse largement assez de temps pour explorer diff\u00e9rent aspect du langage et d\u00e9couvrir de nombreuse blagues. Certaine des id\u00e9es ont \u00e9t\u00e9 de francs succ\u00e8s, au point d'\u00eatre int\u00e9gr\u00e9es aux futures versions du langages, d'autre ont \u00e9t\u00e9 d'affreuses erreurs que nous essayons encore d'\u00e9radiquer aujourd'hui.</p>\n<p>Cette pr\u00e9sentation se concentrera sur deux aspects de la relation entre Python et Mercurial. Nous traiterons d'abord des pi\u00e8ges et astuces \u00e0 propos des performances de Python. Puis nous \u00e9tudierons les avantages et inconv\u00e9nients du language en termes de flexibilit\u00e9 (introspection, monkey-patching, syntaxe, etc) dans le contexte de Mercurial.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["vincent maillol"], "description": "Comprendre les m\u00e9taclasses et de voir diff\u00e9rents exemples d'utilisations", "title": "L'utilisation des m\u00e9taclasses", "abstract": "Objet, Classe et... M\u00e9taclasse ! C'est une troisi\u00e8me dimension qui s'ouvre dans laquelle, le design pattern observateur peut devenir exhibitionniste, \u00e0 nous de d\u00e9couvrir comment voyager dedans. Facilit\u00e9 l'injection de d\u00e9pendance, Offrir une API plus d\u00e9clarative, concevoir des m\u00e9taframeworks. Les M\u00e9taclasses sont une fonctionnalit\u00e9 puissante et peu utilis\u00e9e que nous tenterons d'apprivoiser.", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Comprendre les m\u00e9taclasses et de voir diff\u00e9rents exemples d'utilisations</p></div>", "abstract_md": "<div class=\"abstract\"><p>Objet, Classe et... M\u00e9taclasse ! C'est une troisi\u00e8me dimension qui s'ouvre dans laquelle, le design pattern observateur peut devenir exhibitionniste, \u00e0 nous de d\u00e9couvrir comment voyager dedans. Facilit\u00e9 l'injection de d\u00e9pendance, Offrir une API plus d\u00e9clarative, concevoir des m\u00e9taframeworks. Les M\u00e9taclasses sont une fonctionnalit\u00e9 puissante et peu utilis\u00e9e que nous tenterons d'apprivoiser.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Michael Launay"], "description": "Nova-Ideo est une solution de d\u00e9mocratie participative \u00e9crite avec Pyramid et Sustance D et impl\u00e9mentant un tout nouveau syst\u00e8me de gestion des processus m\u00e9tier.", "title": "Nova-Ideo, une boite \u00e0 id\u00e9es collaborative", "abstract": "Nova-Ideo est la fusion de la boite \u00e0 id\u00e9es et du portail collaboratif.\nC'est une solution de d\u00e9mocratie participative pour la Soci\u00e9t\u00e9, et d'innovations participatives pour les entreprises, administrations et associations.\nNova-Ideo est \u00e9crit avec Pyramid et Sustance D et impl\u00e9mente un tout nouveau syst\u00e8me de gestion des processus m\u00e9tier.\nLe code de Nova-Ideo est en AGPL accessible sur github et sur docker\nVous pouvez aussi tester l'application en ligne en allant sur nova-ideo", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>Nova-Ideo est une solution de d\u00e9mocratie participative \u00e9crite avec Pyramid et Sustance D et impl\u00e9mentant un tout nouveau syst\u00e8me de gestion des processus m\u00e9tier.</p></div>", "abstract_md": "<div class=\"abstract\"><p><strong>Nova-Ideo</strong> est la fusion de la boite \u00e0 id\u00e9es et du portail collaboratif.</p>\n<p>C'est une solution de <strong>d\u00e9mocratie participative</strong> pour la Soci\u00e9t\u00e9, et d'<strong>innovations participatives</strong> pour les entreprises, administrations et associations.</p>\n<p>Nova-Ideo est \u00e9crit avec <strong>Pyramid</strong> et <strong>Sustance D</strong> et impl\u00e9mente un tout nouveau syst\u00e8me de gestion des processus m\u00e9tier.</p>\n<p>Le code de Nova-Ideo est en AGPL accessible sur <a href=\"https://github.com/ecreall/nova-ideo\" title=\"github\">github</a> et sur <a href=\"https://registry.hub.docker.com/u/ecreall/novaideo\" title=\"docker\">docker</a></p>\n<p>Vous pouvez aussi tester l'application en ligne en allant sur <a href=\"http://nova-ideo.org/\" title=\"Nova-Ideo\">nova-ideo</a></p></div>", "audience_level": "Novice"},
{"speakers": ["Arthur Vuillard"], "description": "D'apr\u00e8s la liste des inscrits \u00e0 l'AFPy, il y a des personnes int\u00e9ress\u00e9es par Python un peu partout en France et un peu ailleurs aussi. Et pourtant, tr\u00e8s peu de villes organisent des \u00e9v\u00e9nements r\u00e9guliers. Cette pr\u00e9sentation va vous aider \u00e0 organiser le premier \u00e9v\u00e9nement Python dans votre ville.", "title": "Cr\u00e9er une communaut\u00e9 locale", "abstract": "Organiser un \u00e9v\u00e9nement sur Python peut para\u00eetre chronophage et intimider d'\u00e9ventuels organisateurs.\nCette pr\u00e9sentation va montrer comment il est simple d'organiser un \u00e9v\u00e9nement autour de Python.\nNous allons donc aborder divers aspects comme :\n- \u00e9tudier l'int\u00e9r\u00eat local\n- trouver un lieu\n- trouver une date\n- faire venir des gens\n- \u00eatre accueillant pour tout le monde\n- recommencer\nEn esp\u00e9rant que \u00e7a vous donne des id\u00e9es :)", "date": "2015-10-18 00:00:00", "description_md": "<div class=\"description\"><p>D'apr\u00e8s la liste des inscrits \u00e0 l'AFPy, il y a des personnes int\u00e9ress\u00e9es par Python un peu partout en France et un peu ailleurs aussi. Et pourtant, tr\u00e8s peu de villes organisent des \u00e9v\u00e9nements r\u00e9guliers. Cette pr\u00e9sentation va vous aider \u00e0 organiser le premier \u00e9v\u00e9nement Python dans votre ville.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Organiser un \u00e9v\u00e9nement sur Python peut para\u00eetre chronophage et intimider d'\u00e9ventuels organisateurs.</p>\n<p>Cette pr\u00e9sentation va montrer comment il est simple d'organiser un \u00e9v\u00e9nement autour de Python.</p>\n<p>Nous allons donc aborder divers aspects comme :\n- \u00e9tudier l'int\u00e9r\u00eat local\n- trouver un lieu\n- trouver une date\n- faire venir des gens\n- \u00eatre accueillant pour tout le monde\n- recommencer</p>\n<p>En esp\u00e9rant que \u00e7a vous donne des id\u00e9es :)</p></div>", "audience_level": "Novice"},
{"speakers": ["Jean-Philippe Camguilhem", "Viviane Pons", "Amandine Nayrolles"], "description": "En vue de l'adoption de la nouvelle charte de l'AFPy en AG. Recueillir, les avis et t\u00e9moignages sur la place des minorit\u00e9s au sein de l'AFPy.", "title": "Table ronde sur la diversit\u00e9", "abstract": "L'AFPy a toujours pris soin, et s'est toujours efforc\u00e9e de cr\u00e9er, animer et sponsoriser des \u00e9v\u00e8nements ouverts \u00e0 tous.\nIl y a quelques ann\u00e9es maintenant, nous avons adopt\u00e9 une charte, et chaque \u00e9v\u00e8nement est encadr\u00e9 par un \"Code of Conduct\".\nBien entendu nous n'avons pas pu \u00e9viter tous les comportements \"machos, sexistes\" etc pour ne citer qu'eux.\nCependant, nous veillons attentivement au respect du CoC, un d\u00e9bat virulent sur la \"discrimination positive\" a anim\u00e9 la mailing-list de l'AFPy il y a quatre ou cinq ans maintenant.\nCette ann\u00e9e le refus par le bureau d'apposer le \"tampon officiel\" sur un \u00e9v\u00e8nement non-ouvert \u00e0 tous, a engendr\u00e9 une proposition de faire \u00e9voluer la charte.\nLa place des femmes au sein de l'AFPy est le fil conducteur de ces deux threads, mais il est r\u00e9v\u00e9lateur d'une question plus large, quelle place, et quelles actions mettre en place pour une meilleure acceptation de la diversit\u00e9, toujours dans le respect d'\u00eatre une association bienveillante et accueillante pour tous.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>En vue de l'adoption de la nouvelle charte de l'AFPy en AG. Recueillir, les avis et t\u00e9moignages sur la place des minorit\u00e9s au sein de l'AFPy.</p></div>", "abstract_md": "<div class=\"abstract\"><p>L'AFPy a toujours pris soin, et s'est toujours efforc\u00e9e de cr\u00e9er, animer et sponsoriser des \u00e9v\u00e8nements ouverts \u00e0 tous.</p>\n<p>Il y a quelques ann\u00e9es maintenant, nous avons adopt\u00e9 une charte, et chaque \u00e9v\u00e8nement est encadr\u00e9 par un \"Code of Conduct\".</p>\n<p>Bien entendu nous n'avons pas pu \u00e9viter tous les comportements \"machos, sexistes\" etc pour ne citer qu'eux.</p>\n<p>Cependant, nous veillons attentivement au respect du CoC, un d\u00e9bat virulent sur la \"discrimination positive\" a anim\u00e9 la mailing-list de l'AFPy il y a quatre ou cinq ans maintenant.</p>\n<p>Cette ann\u00e9e le refus par le bureau d'apposer le \"tampon officiel\" sur un \u00e9v\u00e8nement non-ouvert \u00e0 tous, a engendr\u00e9 une proposition de faire \u00e9voluer la charte.</p>\n<p>La place des femmes au sein de l'AFPy est le fil conducteur de ces deux threads, mais il est r\u00e9v\u00e9lateur d'une question plus large, quelle place, et quelles actions mettre en place pour une meilleure acceptation de la diversit\u00e9, toujours dans le respect d'\u00eatre une association bienveillante et accueillante pour tous.</p></div>", "audience_level": "Novice"},
{"speakers": ["Paul TREMBERTH"], "description": "All you need to know about XPath 1.0 in a web scraping project: the different axes, attribute matching, string functions, EXSLT extensions plus a few other handy patterns like CSS selectors and Javascript parsing.", "title": "XPath for web scraping", "abstract": "When you need to extract data from web pages, you usually parse HTML documents into a DOM tree and then use libraries like BeautifulSoup or the ElementTree API to extract data from it.\nSome libraries also support XPath expressions which can express more complex traversal and search patterns.\nEverything about XPath 1.0 is defined in W3C lengthly specification but it can be obscure to read at first. The basics are quite simple to grasp though, and this talk will go over the most useful syntax patterns you need to get started.\nWhat we'll cover:\n- axes and how to look for specific tags, parent element, children or siblings nodes\n- predicates and selecting nodes based on attribute or content values\n- built-in string functions that you should know about\n- EXSLT extensions supported by lxml and how they can solve tricky lookups\nWe'll end the talk with a few handy tips:\n- how to use CSS selectors to do some of the above\n- how to parse Javascript code with XPath", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>All you need to know about XPath 1.0 in a web scraping project: the different axes, attribute matching, string functions, EXSLT extensions plus a few other handy patterns like CSS selectors and Javascript parsing.</p></div>", "abstract_md": "<div class=\"abstract\"><p>When you need to extract data from web pages, you usually parse HTML documents into a DOM tree and then use libraries like BeautifulSoup or the ElementTree API to extract data from it.\nSome libraries also support XPath expressions which can express more complex traversal and search patterns.</p>\n<p>Everything about XPath 1.0 is defined in W3C lengthly specification but it can be obscure to read at first. The basics are quite simple to grasp though, and this talk will go over the most useful syntax patterns you need to get started.</p>\n<p>What we'll cover:\n- axes and how to look for specific tags, parent element, children or siblings nodes\n- predicates and selecting nodes based on attribute or content values\n- built-in string functions that you should know about\n- EXSLT extensions supported by lxml and how they can solve tricky lookups</p>\n<p>We'll end the talk with a few handy tips:\n- how to use CSS selectors to do some of the above\n- how to parse Javascript code with XPath</p></div>", "audience_level": "Novice"},
{"speakers": ["Jonathan Schemoul", "Thomas Chiroux"], "description": "Une application traitant et stockant en temps r\u00e9el des donn\u00e9es g\u00e9ographiques peut vite devenir une usine \u00e0 gaz. \nNous verrons les outils pouvant \u00eatre utilis\u00e9s ainsi que des exemples d'applications \u00e0 r\u00e9aliser (plan d'immeubles, localisation de v\u00e9hicules, v\u00e9rification de zones autoris\u00e9es, heatmaps, etc.)", "title": "Geolocalisation et traitement de donn\u00e9es g\u00e9ographique en temps r\u00e9el avec Python.", "abstract": "Technologies :\n- GeoJSON\n- AsyncIO / Tornado\n- Fiona, Shapely (stockage et op\u00e9ration sur des features geojson)\n- Pyproj (projections g\u00e9ographiques)\n- Mongodb (stockage)\n- Pyflwor (langage de requetes)\n- OpenLayers 3, Mootools (javascript pour l'affichage web)\n- etc.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Une application traitant et stockant en temps r\u00e9el des donn\u00e9es g\u00e9ographiques peut vite devenir une usine \u00e0 gaz. </p>\n<p>Nous verrons les outils pouvant \u00eatre utilis\u00e9s ainsi que des exemples d'applications \u00e0 r\u00e9aliser (plan d'immeubles, localisation de v\u00e9hicules, v\u00e9rification de zones autoris\u00e9es, heatmaps, etc.)</p></div>", "abstract_md": "<div class=\"abstract\"><p>Technologies :\n- GeoJSON\n- AsyncIO / Tornado\n- Fiona, Shapely (stockage et op\u00e9ration sur des features geojson)\n- Pyproj (projections g\u00e9ographiques)\n- Mongodb (stockage)\n- Pyflwor (langage de requetes)\n- OpenLayers 3, Mootools (javascript pour l'affichage web)\n- etc.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Mathieu Leplatre", "Alexis M\u00e9taireau", "R\u00e9my Hubscher"], "description": "Bas\u00e9 sur Pyramid, Cliquet est un projet qui permet de se concentrer sur l'essentiel lors de la conception d'APIs.", "title": " Cliquet: un toolkit pour construire des (micro)services", "abstract": "Quelle structure JSON pour mon API ? Quelle syntaxe pour filtrer la liste\nvia la querystring ? Comment g\u00e9rer les \u00e9critures concurrentes ? Et synchroniser\nles donn\u00e9es dans mon application cliente ?\n\nQuand nous d\u00e9veloppons un (micro)service Web, nous d\u00e9pensons g\u00e9n\u00e9ralement\nbeaucoup d'\u00e9nergie dans la conception et la validation du protocole HTTP,\nen particulier lorsqu'il s'agit d'un service qui manipule des donn\u00e9es\n(CRUD, offline first, pagination, ...).\n\nComment pouvons-nous v\u00e9rifier que le service est op\u00e9rationnel ? Quels indicateurs\nStatsD ? Est-ce que Sentry est bien configur\u00e9 ? Comment mettre \u00e0 jour sans\ncasser les applications clientes ?\n\nDe m\u00eame, nous passons beaucoup de temps (ou pire, nous ne le faisons pas !) \u00e0 mettre en place tout l'outillage\npour g\u00e9rer et superviser la mise en production du service. Et si les bonnes\npratiques \u00e9voluent, il faut faire suivre les projets d\u00e9j\u00e0 en place.\nPlut\u00f4t qu'\u00e9crire un \u00e9ni\u00e8me article de blog avec nos recommandations,\nnous avons fait le choix de mettre au point un protocole, et d'en fournir une\nimpl\u00e9mentation en Python.\nCliquet est donc un kit de d\u00e9marrage, bas\u00e9 sur Pyramid, pour construire\ndes (micro)services en se concentrant sur l'essentiel.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Bas\u00e9 sur Pyramid, Cliquet est un projet qui permet de se concentrer sur l'essentiel lors de la conception d'APIs.</p></div>", "abstract_md": "<div class=\"abstract\"><blockquote>\n<p>Quelle structure JSON pour mon API ? Quelle syntaxe pour filtrer la liste\nvia la querystring ? Comment g\u00e9rer les \u00e9critures concurrentes ? Et synchroniser\nles donn\u00e9es dans mon application cliente ?</p>\n</blockquote>\n<p>Quand nous d\u00e9veloppons un (micro)service Web, nous d\u00e9pensons g\u00e9n\u00e9ralement\nbeaucoup d'\u00e9nergie dans la conception et la validation du protocole HTTP,\nen particulier lorsqu'il s'agit d'un service qui manipule des donn\u00e9es\n(<em>CRUD, offline first, pagination, ...</em>).</p>\n<blockquote>\n<p>Comment pouvons-nous v\u00e9rifier que le service est op\u00e9rationnel ? Quels indicateurs\nStatsD ? Est-ce que Sentry est bien configur\u00e9 ? Comment mettre \u00e0 jour sans\ncasser les applications clientes ?</p>\n</blockquote>\n<p>De m\u00eame, nous passons beaucoup de temps (ou pire, nous ne le faisons pas !) \u00e0 mettre en place tout l'outillage\npour g\u00e9rer et superviser la mise en production du service. Et si les bonnes\npratiques \u00e9voluent, il faut faire suivre les projets d\u00e9j\u00e0 en place.</p>\n<p>Plut\u00f4t qu'\u00e9crire un \u00e9ni\u00e8me article de blog avec nos recommandations,\nnous avons fait le choix de mettre au point un protocole, et d'en fournir une\nimpl\u00e9mentation en Python.</p>\n<p><em>Cliquet</em> est donc un kit de d\u00e9marrage, bas\u00e9 sur Pyramid, pour construire\ndes (micro)services en se concentrant sur l'essentiel.</p></div>", "audience_level": "Novice"},
{"speakers": ["Beno\u00eet Bryon"], "description": "xal permet d'\u00e9crire des scripts Python qui peuvent \u00eatre ex\u00e9cut\u00e9s dans diff\u00e9rents contextes, par exemple en local (stdlib), en SSH (via Fabric), et plus si affinit\u00e9s.", "title": "xal : un code unique, une ex\u00e9cution qui s'adapte", "abstract": "Xal permet d'ex\u00e9cuter des commandes (sh), de manipuler des fichiers (pathlib) ou de g\u00e9rer d'autres ressources sur un syst\u00e8me. Son originalit\u00e9 est de proposer une API unique qui s'adapte en fonction de l'environnement. Les scripts ainsi cr\u00e9\u00e9s sont portables. Ils peuvent \u00eatre ex\u00e9cut\u00e9s en local via la biblioth\u00e8que standard, en SSH via Fabric, et pourquoi pas en asynchrone via Salt.\n\u00c0 quoi \u00e7a peut servir ? Par exemple \u00e0 pouvoir passer d'un outil \u00e0 l'autre (local vers Fabric, Fabric vers Salt, ...) sans avoir \u00e0 r\u00e9\u00e9crire tout son code. Ou bien \u00e0 \u00e9crire des biblioth\u00e8ques compatibles avec plusieurs outils. Ou m\u00eame simplement \u00e0 utiliser l'API pathlib en SSH via Fabric...\nPlus d'informations sur https://xal.readthedocs.org/", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>xal permet d'\u00e9crire des scripts Python qui peuvent \u00eatre ex\u00e9cut\u00e9s dans diff\u00e9rents contextes, par exemple en local (stdlib), en SSH (via Fabric), et plus si affinit\u00e9s.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Xal permet d'ex\u00e9cuter des commandes (sh), de manipuler des fichiers (pathlib) ou de g\u00e9rer d'autres ressources sur un syst\u00e8me. Son originalit\u00e9 est de proposer une API unique qui s'adapte en fonction de l'environnement. Les scripts ainsi cr\u00e9\u00e9s sont portables. Ils peuvent \u00eatre ex\u00e9cut\u00e9s en local via la biblioth\u00e8que standard, en SSH via Fabric, et pourquoi pas en asynchrone via Salt.</p>\n<p>\u00c0 quoi \u00e7a peut servir ? Par exemple \u00e0 pouvoir passer d'un outil \u00e0 l'autre (local vers Fabric, Fabric vers Salt, ...) sans avoir \u00e0 r\u00e9\u00e9crire tout son code. Ou bien \u00e0 \u00e9crire des biblioth\u00e8ques compatibles avec plusieurs outils. Ou m\u00eame simplement \u00e0 utiliser l'API pathlib en SSH via Fabric...</p>\n<p>Plus d'informations sur <a href=\"https://xal.readthedocs.org/\" title=\"https://xal.readthedocs.org/\">https://xal.readthedocs.org/</a></p></div>", "audience_level": "Novice"},
{"speakers": ["Boris FELD"], "description": "Les micro-services sont la nouvelle mode ces derniers temps, qu'est-ce qui se cache derri\u00e8re ce \"nouveau\" terme et comment en faire en Python ?", "title": "Micro-services k\u00e9sako", "abstract": "Les micro-services sont la nouvelle mode de ces derniers temps, mais qu'est-ce que terme repr\u00e9sente donc bien ? Encore un truc \u00e0 la mode du style full-stack developer ou DevOps ? C'est un peu li\u00e9 effectivement.\nComment peut se d\u00e9finir une architecture micro-service, quels sont ses avantages, ses inconv\u00e9nients. Quels sont les challenges \u00e0 adresser avant de pouvoir passer \u00e0 une architecture micro-services, quand ne faut-il ne pas y passer ? Quel sont les diff\u00e9rences avec les architectures SOA \"classiques\" ?\nJe donnerais un d\u00e9but de r\u00e9ponse \u00e0 vos interrogations et vous pr\u00e9senterais des solutions pour d\u00e9velopper des micro-services en Python gr\u00e2ce \u00e0 principalement ZeroServices.\nCe talk se concentrera surtout sur la partie th\u00e9orique puisque les micro-services sont une architecture agnostique sur le language de programmation.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Les micro-services sont la nouvelle mode ces derniers temps, qu'est-ce qui se cache derri\u00e8re ce \"nouveau\" terme et comment en faire en Python ?</p></div>", "abstract_md": "<div class=\"abstract\"><p>Les micro-services sont la nouvelle mode de ces derniers temps, mais qu'est-ce que terme repr\u00e9sente donc bien ? Encore un truc \u00e0 la mode du style full-stack developer ou DevOps ? C'est un peu li\u00e9 effectivement.</p>\n<p>Comment peut se d\u00e9finir une architecture micro-service, quels sont ses avantages, ses inconv\u00e9nients. Quels sont les challenges \u00e0 adresser avant de pouvoir passer \u00e0 une architecture micro-services, quand ne faut-il ne pas y passer ? Quel sont les diff\u00e9rences avec les architectures SOA \"classiques\" ?</p>\n<p>Je donnerais un d\u00e9but de r\u00e9ponse \u00e0 vos interrogations et vous pr\u00e9senterais des solutions pour d\u00e9velopper des micro-services en Python gr\u00e2ce \u00e0 principalement ZeroServices.</p>\n<p>Ce talk se concentrera surtout sur la partie th\u00e9orique puisque les micro-services sont une architecture agnostique sur le language de programmation.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["\u00c9ric LEMOINE"], "description": "Pr\u00e9sentation de GeoAlchemy, une biblioth\u00e8que Python offrant des extensions \"g\u00e9ographiques\" \u00e0 SQLAlchemy.", "title": "GeoAlchemy : le g\u00e9o-compagnon d'SQLAlchemy", "abstract": "GeoAlchemy fournit des extensions \"g\u00e9ographiques\" \u00e0 SQLAlchemy, la c\u00e9l\u00e8bre et brillante biblioth\u00e8que Python pour interagir avec des bases de donn\u00e9e SQL. GeoAlchemy permet de facilement utiliser les types, fonctions et op\u00e9rateurs \"g\u00e9o\" des bases de donn\u00e9es g\u00e9ographiques, en b\u00e9n\u00e9ficiant de toute la flexibilit\u00e9 de SQLAlchemy. GeoAlchemy suit les principes et la philosophie d'SQLAlchemy, pour offrir un syst\u00e8me flexible, performant et fiable.\nDans cette pr\u00e9sentation je montrerai comment utiliser GeoAlchemy, autant avec l'ORM qu'avec le langage d'expression SQL de SQLAlchemy. Je pr\u00e9senterai aussi quelques biblioth\u00e8ques Python \"g\u00e9o\", comme Shapely, typiquement utilis\u00e9s avec GeoAlchemy.\nQue vous soyez d\u00e9veloppeur ou non, venez \u00e0 cette pr\u00e9sentation pour savoir quand et comment utiliser GeoAlchemy dans vos projets.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Pr\u00e9sentation de GeoAlchemy, une biblioth\u00e8que Python offrant des extensions \"g\u00e9ographiques\" \u00e0 SQLAlchemy. </p></div>", "abstract_md": "<div class=\"abstract\"><p>GeoAlchemy fournit des extensions \"g\u00e9ographiques\" \u00e0 SQLAlchemy, la c\u00e9l\u00e8bre et brillante biblioth\u00e8que Python pour interagir avec des bases de donn\u00e9e SQL. GeoAlchemy permet de facilement utiliser les types, fonctions et op\u00e9rateurs \"g\u00e9o\" des bases de donn\u00e9es g\u00e9ographiques, en b\u00e9n\u00e9ficiant de toute la flexibilit\u00e9 de SQLAlchemy. GeoAlchemy suit les principes et la philosophie d'SQLAlchemy, pour offrir un syst\u00e8me flexible, performant et fiable.</p>\n<p>Dans cette pr\u00e9sentation je montrerai comment utiliser GeoAlchemy, autant avec l'ORM qu'avec le langage d'expression SQL de SQLAlchemy. Je pr\u00e9senterai aussi quelques biblioth\u00e8ques Python \"g\u00e9o\", comme Shapely, typiquement utilis\u00e9s avec GeoAlchemy.</p>\n<p>Que vous soyez d\u00e9veloppeur ou non, venez \u00e0 cette pr\u00e9sentation pour savoir quand et comment utiliser GeoAlchemy dans vos projets. </p></div>", "audience_level": "Intermediate"},
{"speakers": ["Cyril Roelandt"], "description": "Tox est un outil, tr\u00e8s utilis\u00e9 dans les projets Python, qui permet de lancer des tests au sein d'environnements virtuels cr\u00e9\u00e9s par virtualenv. Cette approche souffre de plusieurs d\u00e9fauts qui affectent la reproductibilit\u00e9 des tests. Nous verrons comment il est possible de remplacer virtualenv par Guix et donnerons quelques exemples issus du quotidien d'un d\u00e9veloppeur OpenStack.", "title": "Guix-tox, une version fonctionnelle de tox.", "abstract": "Tox permet de lancer les tests d'un paquet Python dans des environnements virtuels. L'utilisation de ces derniers pose plusieurs probl\u00e8mes:\n\n\nseuls les paquets disponibles sur PyPI sont g\u00e9r\u00e9s. Ainsi, il est parfois   n\u00e9cessaire d'utiliser le gestionnaire de paquets de sa distribution pour installer des fichiers d'en-t\u00eate (on pense notamment \u00e0 lib*-dev sous Debian);\n\n\nlorsque plusieurs environnements ont besoin de la m\u00eame d\u00e9pendance, cette derni\u00e8re est install\u00e9e plusieurs fois, et est dupliqu\u00e9e sur le disque, ce qui provoque une perte d'espace disque;\n\n\nmauvais niveau d'abstraction : la tendance actuelle consiste \u00e0 utiliser des gestionnaires de paquets sp\u00e9cifiques \u00e0 des langages (pip, npm, cpan...)  plut\u00f4t qu'un gestionnaire de paquets robuste;\n\n\nmanque de reproductibilit\u00e9 des tests : les environnements de tests sont loin d'\u00eatre parfaitement isol\u00e9s (les variables d'environnement, les fichiers pr\u00e9sents dans /usr, le choix des locales... peuvent influencer le d\u00e9roulement  des tests).\n\n\nGNU Guix est un gestionnaire de paquets fonctionnel (comme dans \"programmation fonctionnelle\") bas\u00e9 sur Nix. Il permet de construire des paquets dans un environnement compl\u00e8tement isol\u00e9 utilisant les conteneurs fournis par le noyau Linux qui garantit la reproductibilit\u00e9 de l'op\u00e9ration. Nous ferons une pr\u00e9sentation de cet outil et nous attarderons notamment sur la fonctionnalit\u00e9 que nous serons amen\u00e9s \u00e0 utiliser pour guix-tox : \"guix environment\", qui permet de cr\u00e9er un environnement isol\u00e9 contenant uniquement certains paquets.\nEnfin, nous verrons comment il est possible de remplacer virtualenv par Guix dans tox, afin de profiter des avantages de ce gestionnaire de paquets de fa\u00e7on quasi-transparente. Nous montrerons comment il est possible de l'utiliser afin de travailler sur des projets OpenStack tels que python-keystoneclient ou encore la biblioth\u00e8que Oslo.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Tox est un outil, tr\u00e8s utilis\u00e9 dans les projets Python, qui permet de lancer des tests au sein d'environnements virtuels cr\u00e9\u00e9s par virtualenv. Cette approche souffre de plusieurs d\u00e9fauts qui affectent la reproductibilit\u00e9 des tests. Nous verrons comment il est possible de remplacer virtualenv par Guix et donnerons quelques exemples issus du quotidien d'un d\u00e9veloppeur OpenStack.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Tox permet de lancer les tests d'un paquet Python dans des environnements virtuels. L'utilisation de ces derniers pose plusieurs probl\u00e8mes:</p>\n<ul>\n<li>\n<p>seuls les paquets disponibles sur PyPI sont g\u00e9r\u00e9s. Ainsi, il est parfois   n\u00e9cessaire d'utiliser le gestionnaire de paquets de sa distribution pour installer des fichiers d'en-t\u00eate (on pense notamment \u00e0 lib*-dev sous Debian);</p>\n</li>\n<li>\n<p>lorsque plusieurs environnements ont besoin de la m\u00eame d\u00e9pendance, cette derni\u00e8re est install\u00e9e plusieurs fois, et est dupliqu\u00e9e sur le disque, ce qui provoque une perte d'espace disque;</p>\n</li>\n<li>\n<p>mauvais niveau d'abstraction : la tendance actuelle consiste \u00e0 utiliser des gestionnaires de paquets sp\u00e9cifiques \u00e0 des langages (pip, npm, cpan...)  plut\u00f4t qu'un gestionnaire de paquets robuste;</p>\n</li>\n<li>\n<p>manque de reproductibilit\u00e9 des tests : les environnements de tests sont loin d'\u00eatre parfaitement isol\u00e9s (les variables d'environnement, les fichiers pr\u00e9sents dans /usr, le choix des locales... peuvent influencer le d\u00e9roulement  des tests).</p>\n</li>\n</ul>\n<p>GNU Guix est un gestionnaire de paquets fonctionnel (comme dans \"programmation fonctionnelle\") bas\u00e9 sur Nix. Il permet de construire des paquets dans un environnement compl\u00e8tement isol\u00e9 utilisant les conteneurs fournis par le noyau Linux qui garantit la reproductibilit\u00e9 de l'op\u00e9ration. Nous ferons une pr\u00e9sentation de cet outil et nous attarderons notamment sur la fonctionnalit\u00e9 que nous serons amen\u00e9s \u00e0 utiliser pour guix-tox : \"guix environment\", qui permet de cr\u00e9er un environnement isol\u00e9 contenant uniquement certains paquets.</p>\n<p>Enfin, nous verrons comment il est possible de remplacer virtualenv par Guix dans tox, afin de profiter des avantages de ce gestionnaire de paquets de fa\u00e7on quasi-transparente. Nous montrerons comment il est possible de l'utiliser afin de travailler sur des projets OpenStack tels que python-keystoneclient ou encore la biblioth\u00e8que Oslo.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Nicole Harris"], "description": "In this talk, Nicole explores her experience of learning French and Python \"en m\u00eame temps\" and asks the question: What can the Python community learn from the language learning community?", "title": "Learning Python, Learning French", "abstract": "Learning to code is seen as a new literacy akin to learning a second spoken language - but is it? In this talk I'll explore my experiences learning French and Python and examine some of the common themes between both fields. Together we'll dismantle the myth that adults cannot learn as well as children and explore what it really means to be fluent. Finally, we'll explore immersion based learning and look at how it might help us become better Python programmers.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>In this talk, Nicole explores her experience of learning French and Python \"en m\u00eame temps\" and asks the question: What can the Python community learn from the language learning community?</p></div>", "abstract_md": "<div class=\"abstract\"><p>Learning to code is seen as a new literacy akin to learning a second spoken language - but is it? In this talk I'll explore my experiences learning French and Python and examine some of the common themes between both fields. Together we'll dismantle the myth that adults cannot learn as well as children and explore what it really means to be <em>fluent</em>. Finally, we'll explore immersion based learning and look at how it might help us become better Python programmers.</p></div>", "audience_level": "Novice"},
{"speakers": ["David Allouche"], "description": "Pourquoi et comment bien utiliser SQLAlchemy. Comment \u00e9viter les anti-patterns classique. La flexibilit\u00e9 du syst\u00e8me de g\u00e9n\u00e9ration de requ\u00eates. La bonne utilisation des sessions pour la cr\u00e9ations de structures de donn\u00e9es SQL complexes.", "title": "SQLAlchemy - Conseils et astuces", "abstract": "SQLAlchemy est un ORM et un g\u00e9n\u00e9rateur de requ\u00eates SQL pour Python.\nCette pr\u00e9sentation couvre l'utilisation simple et mod\u00e9r\u00e9ment avanc\u00e9e de SQLAlchemy. L'auditeur est averti que cette biblioth\u00e8que poss\u00e8des de nombreuse fonctionnalit\u00e9s avanc\u00e9es qui ne seront pas \u00e9voqu\u00e9es ici. Des exemples concrets seront donn\u00e9s, tir\u00e9s du logiciel m\u00e9tier d\u00e9velopp\u00e9 par le conf\u00e9rencier.\n\nPr\u00e9sentation rapide du module declarative pour la d\u00e9finition des tables.\nInterrogation simple de la base de donn\u00e9es.\nUtilisation des relations pour effectuer des jointures.\nG\u00e9n\u00e9ration de requ\u00eates simples pour des lectures efficaces.\nInsertion simple de donn\u00e9es.\nInsertion de structures de donn\u00e9es complexes en utilisant les relations.\nEviter l'anti-pattern \"requ\u00eate dans une boucle\"\u2026\n\u2026 avec des relation\n\u2026 avec des requ\u00eates explicites\nG\u00e9n\u00e9ration de requ\u00eates tr\u00e8s param\u00e9trables, par exemple pour l'affichage de tables dont les colonnes sont param\u00e9trables.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Pourquoi et comment bien utiliser SQLAlchemy. Comment \u00e9viter les anti-patterns classique. La flexibilit\u00e9 du syst\u00e8me de g\u00e9n\u00e9ration de requ\u00eates. La bonne utilisation des sessions pour la cr\u00e9ations de structures de donn\u00e9es SQL complexes.</p></div>", "abstract_md": "<div class=\"abstract\"><p>SQLAlchemy est un ORM et un g\u00e9n\u00e9rateur de requ\u00eates SQL pour Python.</p>\n<p>Cette pr\u00e9sentation couvre l'utilisation simple et mod\u00e9r\u00e9ment avanc\u00e9e de SQLAlchemy. L'auditeur est averti que cette biblioth\u00e8que poss\u00e8des de nombreuse fonctionnalit\u00e9s avanc\u00e9es qui ne seront pas \u00e9voqu\u00e9es ici. Des exemples concrets seront donn\u00e9s, tir\u00e9s du logiciel m\u00e9tier d\u00e9velopp\u00e9 par le conf\u00e9rencier.</p>\n<ul>\n<li>Pr\u00e9sentation rapide du module <em>declarative</em> pour la d\u00e9finition des tables.</li>\n<li>Interrogation simple de la base de donn\u00e9es.</li>\n<li>Utilisation des relations pour effectuer des jointures.</li>\n<li>G\u00e9n\u00e9ration de requ\u00eates simples pour des lectures efficaces.</li>\n<li>Insertion simple de donn\u00e9es.</li>\n<li>Insertion de structures de donn\u00e9es complexes en utilisant les relations.</li>\n<li>Eviter l'anti-pattern \"requ\u00eate dans une boucle\"\u2026</li>\n<li>\u2026 avec des relation</li>\n<li>\u2026 avec des requ\u00eates explicites</li>\n<li>G\u00e9n\u00e9ration de requ\u00eates tr\u00e8s param\u00e9trables, par exemple pour l'affichage de tables dont les colonnes sont param\u00e9trables.</li>\n</ul></div>", "audience_level": "Intermediate"},
{"speakers": ["Bruno Bord"], "description": "tox est, \u00e0 l'origine, un outil qui lance les tests d'une application ou d'une biblioth\u00e8que au sein de virtualenvs isol\u00e9s. Ceci rend possible l'ex\u00e9cution des tests pour plusieurs version de Python, ou plusieurs versions de votre framework de d\u00e9veloppement favori, ou d'une combinaison de tout ceci.\nMais tox est amour, alors il sait faire bien plus encore.", "title": "tox est amour", "abstract": "Est-ce que mon application est compatible Python 2 ? Python 3 ?\nEst-ce que mon app Django est compatible Django 1.7 ? 1.8 ? master ?\nEst-ce que ma lib est compatible avec Postgresql ? MySQL ? SQLite ?\nEst-ce qu'il est possible de v\u00e9rifier tous ces cas, et une combinaison de tous ces cas ? (par exemple, une app Django compatible 1.7 / avec une base Postgresql en Python 3). Ou toutes les combinaisons possibles ?\nC'est ce que tox sait faire. Mais il sait faire bien plus. Et il vous aime. Il nous aime. Les programmeurs de tox nous aiment.\nIl n'est pas rare que le Pythoniste feignant se dise tout haut \"ah \u00e7a serait bien si c'\u00e9tait possible avec tox\". Et l\u00e0, un des contributeurs de tox remonte le temps dans sa machine et impl\u00e9mente la fonctionnalit\u00e9. De retour dans le pr\u00e9sent, le Pythoniste d\u00e9couvre la fonctionnalit\u00e9 pr\u00e9sente dans la doc et s'\u00e9crie \"Mais c'est trop bien !\".\nDans cette conf\u00e9rence, nous aurons un aper\u00e7u des potentialit\u00e9s de tox, comment le mettre en place tr\u00e8s simplement pour votre projet et de d\u00e9couvrir, \u00e9merveill\u00e9, comment un outil bien fait travaille \u00e0 votre place.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p><code>tox</code> est, \u00e0 l'origine, un outil qui lance les tests d'une application ou d'une biblioth\u00e8que au sein de virtualenvs isol\u00e9s. Ceci rend possible l'ex\u00e9cution des tests pour plusieurs version de Python, ou plusieurs versions de votre framework de d\u00e9veloppement favori, ou d'une combinaison de tout ceci.</p>\n<p>Mais tox est amour, alors il sait faire bien plus encore.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Est-ce que mon application est compatible Python 2 ? Python 3 ?<br>\nEst-ce que mon app Django est compatible Django 1.7 ? 1.8 ? master ?<br>\nEst-ce que ma lib est compatible avec Postgresql ? MySQL ? SQLite ?</p>\n<p>Est-ce qu'il est possible de v\u00e9rifier tous ces cas, et une <strong>combinaison</strong> de tous ces cas ? (par exemple, une app Django compatible 1.7 / avec une base Postgresql en Python 3). Ou <strong>toutes</strong> les combinaisons possibles ?</p>\n<p>C'est ce que <code>tox</code> sait faire. Mais il sait faire bien plus. Et il vous aime. Il nous aime. Les programmeurs de <code>tox</code> nous aiment.</p>\n<p>Il n'est pas rare que le Pythoniste feignant se dise tout haut \"ah \u00e7a serait bien si c'\u00e9tait possible avec tox\". Et l\u00e0, un des contributeurs de tox remonte le temps dans sa machine et impl\u00e9mente la fonctionnalit\u00e9. De retour dans le pr\u00e9sent, le Pythoniste d\u00e9couvre la fonctionnalit\u00e9 pr\u00e9sente dans la doc et s'\u00e9crie \"Mais c'est trop bien !\".</p>\n<p>Dans cette conf\u00e9rence, nous aurons un aper\u00e7u des potentialit\u00e9s de <code>tox</code>, comment le mettre en place tr\u00e8s simplement pour votre projet et de d\u00e9couvrir, \u00e9merveill\u00e9, comment un outil bien fait travaille \u00e0 votre place.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Guillaume Ayoub"], "description": "Sur de nombreux sites Internet, il est courant de vouloir g\u00e9n\u00e9rer \u00e0 la fois des pages dynamiques pour le navigateur et des documents statiques imprimables pour l\u2019archivage ou l\u2019impression. Avec une utilisation astucieuse de certains formats et d\u2019outils ad\u00e9quats (en Python), il est possible d\u2019obtenir un r\u00e9sultat de qualit\u00e9 pour de multiples utilisations.", "title": "Du site dynamique au document imprimable en Python", "abstract": "Il est courant de vouloir g\u00e9n\u00e9rer des pages \u00e0 la fois dynamiques pour le navigateur et statiques imprimables pour l\u2019archivage ou l\u2019impression au sein d\u2019une m\u00eame application web. Que ce soit pour des diaporamas, des factures ou de longs rapports par exemple, on aimerait pouvoir profiter de l\u2019interactivit\u00e9 sans sacrifier une pagination intelligente n\u00e9cessaire aux documents imprimables de qualit\u00e9.\nPython offre d\u2019innombrables outils pour r\u00e9aliser la g\u00e9n\u00e9ration de pages et de documents. Le plus dur est aujourd\u2019hui de choisir parmi ces outils pour produire les documents qui seront exploit\u00e9s au maximum, d\u2019un c\u00f4t\u00e9 par les navigateurs (liens, animations, adaptation aux supports, interactivit\u00e9, etc.) et de l\u2019autre par les clients PDF et l\u2019impression (typographie avanc\u00e9e, en-t\u00eates, pieds de page, pagination, etc).", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Sur de nombreux sites Internet, il est courant de vouloir g\u00e9n\u00e9rer \u00e0 la fois des pages dynamiques pour le navigateur et des documents statiques imprimables pour l\u2019archivage ou l\u2019impression. Avec une utilisation astucieuse de certains formats et d\u2019outils ad\u00e9quats (en Python), il est possible d\u2019obtenir un r\u00e9sultat de qualit\u00e9 pour de multiples utilisations.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Il est courant de vouloir g\u00e9n\u00e9rer des pages \u00e0 la fois dynamiques pour le navigateur et statiques imprimables pour l\u2019archivage ou l\u2019impression au sein d\u2019une m\u00eame application web. Que ce soit pour des diaporamas, des factures ou de longs rapports par exemple, on aimerait pouvoir profiter de l\u2019interactivit\u00e9 sans sacrifier une pagination intelligente n\u00e9cessaire aux documents imprimables de qualit\u00e9.</p>\n<p>Python offre d\u2019innombrables outils pour r\u00e9aliser la g\u00e9n\u00e9ration de pages et de documents. Le plus dur est aujourd\u2019hui de choisir parmi ces outils pour produire les documents qui seront exploit\u00e9s au maximum, d\u2019un c\u00f4t\u00e9 par les navigateurs (liens, animations, adaptation aux supports, interactivit\u00e9, etc.) et de l\u2019autre par les clients PDF et l\u2019impression (typographie avanc\u00e9e, en-t\u00eates, pieds de page, pagination, etc).</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Alexandre Figura"], "description": "Retour d'exp\u00e9rience sur l'utilisation et l'int\u00e9gration d'Elasticsearch avec Django Rest Framework.", "title": "Elasticsearch - Int\u00e9gration avec Django REST Framework", "abstract": "Elasticsearch est un moteur de recherche qui s\u00e9duit de plus en plus de personnes. Et pour cause, les fonctionnalit\u00e9s qu'il propose en font un outil de choix pour quiconque souhaite analyser des documents :\n\nil est distribu\u00e9, permettant ainsi d'\u00e9voluer pour tenir la charge ou rechercher \u00e0 travers d'avantage de documents,\npropose un language de recherche avanc\u00e9, pour r\u00e9pondre \u00e0 un large ensemble de besoins,\nest facilement d\u00e9ployable, notamment en environnement de d\u00e9veloppement.\n\nElasticsearch est ainsi souvent utilis\u00e9 pour stocker et rechercher des logs, ou en tant que \"datastore\" secondaire coupl\u00e9 \u00e0 une base de donn\u00e9es existante pour apporter plus de performance sur les recherches dites \"full-text\".\nA travers un exemple d'int\u00e9gration avec Django Rest Framework, cette pr\u00e9sentation sera ainsi l'occasion de faire un rapide tour sur le fonctionnement d'Elasticsearch et de partager des trucs et astuces. Seront pass\u00e9s en revue :\n\nla gestion de l'authentification et des permissions,\nla s\u00e9rialization des r\u00e9sultats retourn\u00e9s par Elasticsearch et leur pagination,\nl'optimisation des recherches sur des indices organis\u00e9s par date,\nla gestion de mapping avec elasticsearch_dsl,\nl'\u00e9criture de tests unitaires,\nl'utilisation d'Elasticsearch sur un serveur d'int\u00e9gration continue.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Retour d'exp\u00e9rience sur l'utilisation et l'int\u00e9gration d'Elasticsearch avec Django Rest Framework.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Elasticsearch est un moteur de recherche qui s\u00e9duit de plus en plus de personnes. Et pour cause, les fonctionnalit\u00e9s qu'il propose en font un outil de choix pour quiconque souhaite analyser des documents :</p>\n<ul>\n<li>il est distribu\u00e9, permettant ainsi d'\u00e9voluer pour tenir la charge ou rechercher \u00e0 travers d'avantage de documents,</li>\n<li>propose un language de recherche avanc\u00e9, pour r\u00e9pondre \u00e0 un large ensemble de besoins,</li>\n<li>est facilement d\u00e9ployable, notamment en environnement de d\u00e9veloppement.</li>\n</ul>\n<p>Elasticsearch est ainsi souvent utilis\u00e9 pour stocker et rechercher des logs, ou en tant que \"datastore\" secondaire coupl\u00e9 \u00e0 une base de donn\u00e9es existante pour apporter plus de performance sur les recherches dites \"full-text\".</p>\n<p>A travers un exemple d'int\u00e9gration avec Django Rest Framework, cette pr\u00e9sentation sera ainsi l'occasion de faire un rapide tour sur le fonctionnement d'Elasticsearch et de partager des trucs et astuces. Seront pass\u00e9s en revue :</p>\n<ul>\n<li>la gestion de l'authentification et des permissions,</li>\n<li>la s\u00e9rialization des r\u00e9sultats retourn\u00e9s par Elasticsearch et leur pagination,</li>\n<li>l'optimisation des recherches sur des indices organis\u00e9s par date,</li>\n<li>la gestion de mapping avec elasticsearch_dsl,</li>\n<li>l'\u00e9criture de tests unitaires,</li>\n<li>l'utilisation d'Elasticsearch sur un serveur d'int\u00e9gration continue.</li>\n</ul></div>", "audience_level": "Intermediate"},
{"speakers": ["Matthieu Huin", "Fabien Boucher"], "description": "Cette pr\u00e9sentation s'adresse \u00e0 tout d\u00e9veloppeur soucieux de la qualit\u00e9 du code, int\u00e9ress\u00e9 par les probl\u00e9matiques d'int\u00e9gration et de d\u00e9veloppement continus, et travaillant sur un projet comptant plus de 2 contributeurs. Elle se concentre sur Zuul, un syst\u00e8me de \"gating\" des contributions \u00e0 un ensemble de projets.", "title": "Optimiser l'int\u00e9gration de code avec Zuul", "abstract": "Les projets de grande \u00e9chelle comme OpenStack, int\u00e9grant plus d'une centaine de contributions par jour en moyenne, ne pourraient aboutir sans un contr\u00f4le rigoureux de la qualit\u00e9 du code. C'est pourquoi l'une des t\u00e2ches majeures des d\u00e9veloppeurs principaux (\"core devs\") d'OpenStack est de passer en revue les contributions (\"code review\") puis d'\u00e9ventuellement les valider pour int\u00e9gration au code source. Mais comment g\u00e9rer un tel flux de contributions en un temps raisonnable ? Comment \u00eatre certain qu'une contribution accept\u00e9e par un core dev ne va pas avoir des effets de bord sur une autre contribution accept\u00e9e simultan\u00e9ment par quelqu'un d'autre, ou sur un projet connexe ?\nLa communaut\u00e9 OpenStack utilise un outil cod\u00e9 en Python appel\u00e9 Zuul (en r\u00e9f\u00e9rence \u00e0 Ghostbusters) pour r\u00e9pondre \u00e0 ces probl\u00e9matiques, et permettre aux core devs de ne pas avoir \u00e0 consacrer 100% de leur activit\u00e9 \u00e0 la revue de code. L'int\u00e9r\u00eat de Zuul est clair pour tout projet, quel que soit son envergure, n\u00e9cessitant un contr\u00f4le rigoureux pour l'int\u00e9gration et le d\u00e9ploiement continus. Nous pr\u00e9sentons donc ici les principales fonctionnalit\u00e9s de Zuul \u00e0 travers des cas d'usage simples, et telles que nous les utilisons dans le projet Software Factory, une suite logicielle libre \"all in one\" de gestion de code, pouss\u00e9 par Red Hat.\nNous couvrirons les sujets suivants:\n\nComment Zuul interagit avec Gerrit, le service de revue du code\nQue signifie la notion de \"pipelines\" dans Zuul, et comment les utiliser\nQuelle strat\u00e9gie suit Zuul pour g\u00e9rer la queue des contributions \u00e0 tester ou \u00e0 int\u00e9grer\nComment Zuul g\u00e8re les interd\u00e9pendances de projets\nExemples de workflows de CI et CD facilit\u00e9s par Zuul", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Cette pr\u00e9sentation s'adresse \u00e0 tout d\u00e9veloppeur soucieux de la qualit\u00e9 du code, int\u00e9ress\u00e9 par les probl\u00e9matiques d'int\u00e9gration et de d\u00e9veloppement continus, et travaillant sur un projet comptant plus de 2 contributeurs. Elle se concentre sur Zuul, un syst\u00e8me de \"gating\" des contributions \u00e0 un ensemble de projets.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Les projets de grande \u00e9chelle comme OpenStack, int\u00e9grant plus d'une centaine de contributions par jour en moyenne, ne pourraient aboutir sans un contr\u00f4le rigoureux de la qualit\u00e9 du code. C'est pourquoi l'une des t\u00e2ches majeures des d\u00e9veloppeurs principaux (\"core devs\") d'OpenStack est de passer en revue les contributions (\"code review\") puis d'\u00e9ventuellement les valider pour int\u00e9gration au code source. Mais comment g\u00e9rer un tel flux de contributions en un temps raisonnable ? Comment \u00eatre certain qu'une contribution accept\u00e9e par un core dev ne va pas avoir des effets de bord sur une autre contribution accept\u00e9e simultan\u00e9ment par quelqu'un d'autre, ou sur un projet connexe ?</p>\n<p>La communaut\u00e9 OpenStack utilise un outil cod\u00e9 en Python appel\u00e9 Zuul (en r\u00e9f\u00e9rence \u00e0 Ghostbusters) pour r\u00e9pondre \u00e0 ces probl\u00e9matiques, et permettre aux core devs de ne pas avoir \u00e0 consacrer 100% de leur activit\u00e9 \u00e0 la revue de code. L'int\u00e9r\u00eat de Zuul est clair pour tout projet, quel que soit son envergure, n\u00e9cessitant un contr\u00f4le rigoureux pour l'int\u00e9gration et le d\u00e9ploiement continus. Nous pr\u00e9sentons donc ici les principales fonctionnalit\u00e9s de Zuul \u00e0 travers des cas d'usage simples, et telles que nous les utilisons dans le projet <a href=\"http://softwarefactory.enovance.com\" title=\"Software Factory\">Software Factory</a>, une suite logicielle libre \"all in one\" de gestion de code, pouss\u00e9 par Red Hat.</p>\n<p>Nous couvrirons les sujets suivants:</p>\n<ul>\n<li>Comment Zuul interagit avec Gerrit, le service de revue du code</li>\n<li>Que signifie la notion de \"pipelines\" dans Zuul, et comment les utiliser</li>\n<li>Quelle strat\u00e9gie suit Zuul pour g\u00e9rer la queue des contributions \u00e0 tester ou \u00e0 int\u00e9grer</li>\n<li>Comment Zuul g\u00e8re les interd\u00e9pendances de projets</li>\n<li>Exemples de workflows de CI et CD facilit\u00e9s par Zuul</li>\n</ul></div>", "audience_level": "Intermediate"},
{"speakers": ["Charlie Clark"], "description": "We're lucky with Python that we can concentrate on getting the job done and often don't have to worry about how fast our code runs. After all code than runs today will finish before faster code that runs tomorrow. But what do you do when you need to make your code run faster? This talk will give you an introduction into how to improve performance where you need it most.", "title": "The Art of Doing Nothing \u2013 Using profiling to speed up your code", "abstract": "We're lucky with Python that we can concentrate on getting the job done and often don't have to worry about how fast our code runs. Those of us without computer science degrees really know how to appreciate this. And 9 times out of 10 you probably don't need to worry at all about the speed: if the program takes 10 minutes to run but saves you hours of work then it's a job well done. But then there is that 10th time\u2026\nBased on work done over the last couple of years with openpyxl I will show some tips and tricks as to how you can approach improving performance without having to become a mathematical genius or computer whizz. There is lots of good advice about performance around but it has to make sense within the context of your application: does it matter that Python loops are considered slow?\nThe talk will cover using tests and profiling to identify the areas that you need to work on, stop you breaking stuff irreparably, and what things you might want to research or ask about. I do promise you: the art of performance really is the art of doing nothing!\nLa pr\u00e9sentation sera en anglais mais je parle le fran\u00e7ais assez bien et peu r\u00e9pondre aux questions en fran\u00e7ais ou peut-\u00eatre le franglais!", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>We're lucky with Python that we can concentrate on getting the job done and often don't have to worry about how fast our code runs. After all code than runs today will finish before faster code that runs tomorrow. But what do you do when you need to make your code run faster? This talk will give you an introduction into how to improve performance where you need it most.</p></div>", "abstract_md": "<div class=\"abstract\"><p>We're lucky with Python that we can concentrate on getting the job done and often don't have to worry about how fast our code runs. Those of us without computer science degrees <strong>really</strong> know how to appreciate this. And 9 times out of 10 you probably don't need to worry at all about the speed: if the program takes 10 minutes to run but saves you hours of work then it's a job well done. But then there is that 10th time\u2026</p>\n<p>Based on work done over the last couple of years with openpyxl I will show some tips and tricks as to how you can approach improving performance without having to become a mathematical genius or computer whizz. There is lots of good advice about performance around but it has to make sense within the context of your application: does it matter that Python loops are considered slow?</p>\n<p>The talk will cover using tests and profiling to identify the areas that you need to work on, stop you breaking stuff irreparably, and what things you might want to research or ask about. I do promise you: the art of performance really is the art of doing nothing!</p>\n<p>La pr\u00e9sentation sera en anglais mais je parle le fran\u00e7ais assez bien et peu r\u00e9pondre aux questions en fran\u00e7ais ou peut-\u00eatre le franglais!</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Michael Scherer"], "description": "Durant cette pr\u00e9sentation, nous verrons comment la mont\u00e9e en popularit\u00e9 des containeurs (comme Docker, RunC, Rkt, Warden, etc) change le fonctionnement des services de PaaS via l'int\u00e9gration de orchestrateurs comme Kubernetes ou Mesos, et l'impact pour les d\u00e9veloppeurs python aussi bien que les administrateurs syst\u00e8mes ayant d\u00e9ploy\u00e9 ce genre de syst\u00e9mes chez eux.", "title": "D\u00e9ploiement d'applications python dans un monde post-docker", "abstract": "Depuis 2 ans, le mot containeur a remplac\u00e9 cloud sur les buzzometres de la presse informatique. n\u00e9anmoins, le vrai changement ne viens pas des containeurs eux m\u00eames (qui datent facile d'il y a 10 ans ou plus), mais de l'impact sur le d\u00e9ploiement des applications et la facilitation des architectures \u00e0 base de microservices. \nAvec la popularisation de Docker est venu le besoin de combler tout les manques du logiciel notamment en terme de d\u00e9ploiement et d'orchestration, via des outils comme kubernetes, mesos, fig ou atomic-app. Cette pr\u00e9sentation parleras donc des concepts sous jacents, de l'impact pour les admins et les codeurs python de tout type, et dans quel cas est ce que fait sens de mettre en place ce genre de d\u00e9ploiement.\nLes exemples tourneront surtout autour de la pile docker/kubernetes/origin/atomic-app mais les alternatives ne seront pas oubli\u00e9s et pr\u00e9sent\u00e9s aussi.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Durant cette pr\u00e9sentation, nous verrons comment la mont\u00e9e en popularit\u00e9 des containeurs (comme Docker, RunC, Rkt, Warden, etc) change le fonctionnement des services de PaaS via l'int\u00e9gration de orchestrateurs comme Kubernetes ou Mesos, et l'impact pour les d\u00e9veloppeurs python aussi bien que les administrateurs syst\u00e8mes ayant d\u00e9ploy\u00e9 ce genre de syst\u00e9mes chez eux.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Depuis 2 ans, le mot containeur a remplac\u00e9 cloud sur les buzzometres de la presse informatique. n\u00e9anmoins, le vrai changement ne viens pas des containeurs eux m\u00eames (qui datent facile d'il y a 10 ans ou plus), mais de l'impact sur le d\u00e9ploiement des applications et la facilitation des architectures \u00e0 base de microservices. </p>\n<p>Avec la popularisation de Docker est venu le besoin de combler tout les manques du logiciel notamment en terme de d\u00e9ploiement et d'orchestration, via des outils comme kubernetes, mesos, fig ou atomic-app. Cette pr\u00e9sentation parleras donc des concepts sous jacents, de l'impact pour les admins et les codeurs python de tout type, et dans quel cas est ce que fait sens de mettre en place ce genre de d\u00e9ploiement.</p>\n<p>Les exemples tourneront surtout autour de la pile docker/kubernetes/origin/atomic-app mais les alternatives ne seront pas oubli\u00e9s et pr\u00e9sent\u00e9s aussi.</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Alexandre Fayolle"], "description": "L'OCA (Odoo Community Association) est une association \u00e0 but non lucratif qui f\u00e9d\u00e8re de nombreuses contribution \u00e0 l'\u00e9cosyst\u00e8me Odoo / OpenERP. Son fonctionnement peut servir d'exemple \u00e0 d'autres communaut\u00e9s FLOSS qui se construisent autour d'une solution libre publi\u00e9e par un \u00e9diteur.", "title": "Fonctionnement de l'Odoo Community Association", "abstract": "J'envisage 3 parties pour le Poster:\n\n\nPr\u00e9sentation de l'\u00e9cosyst\u00e8me Odoo sa (\u00e9diteur) / Partenaires & contributeurs / Utilisateurs finaux, positionnement de l'OCA, c\u00f4t\u00e9 Partenaires et contributeurs, avec en parall\u00e8le la division des responsabilit\u00e9s en terme de maintenance du code (l'\u00e9diteur maintient le c\u0153ur, les partenaires et les contributeurs, un ensemble de greffons)\n\n\nGouvernance de l'OCA : le bureau, les d\u00e9l\u00e9gu\u00e9s, les membres, les contributeurs, r\u00f4les et responsabilit\u00e9s\n\n\nGestion des projets sur github (assurance qualit\u00e9, revue de code, approbation, int\u00e9gration des contribution) et r\u00f4le des code sprints", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>L'OCA (Odoo Community Association) est une association \u00e0 but non lucratif qui f\u00e9d\u00e8re de nombreuses contribution \u00e0 l'\u00e9cosyst\u00e8me Odoo / OpenERP. Son fonctionnement peut servir d'exemple \u00e0 d'autres communaut\u00e9s FLOSS qui se construisent autour d'une solution libre publi\u00e9e par un \u00e9diteur. </p></div>", "abstract_md": "<div class=\"abstract\"><p>J'envisage 3 parties pour le Poster:</p>\n<ol>\n<li>\n<p>Pr\u00e9sentation de l'\u00e9cosyst\u00e8me Odoo sa (\u00e9diteur) / Partenaires &amp; contributeurs / Utilisateurs finaux, positionnement de l'OCA, c\u00f4t\u00e9 Partenaires et contributeurs, avec en parall\u00e8le la division des responsabilit\u00e9s en terme de maintenance du code (l'\u00e9diteur maintient le c\u0153ur, les partenaires et les contributeurs, un ensemble de greffons)</p>\n</li>\n<li>\n<p>Gouvernance de l'OCA : le bureau, les d\u00e9l\u00e9gu\u00e9s, les membres, les contributeurs, r\u00f4les et responsabilit\u00e9s</p>\n</li>\n<li>\n<p>Gestion des projets sur github (assurance qualit\u00e9, revue de code, approbation, int\u00e9gration des contribution) et r\u00f4le des code sprints</p>\n</li>\n</ol></div>", "audience_level": "Intermediate"},
{"speakers": ["serge sans_paille"], "description": "La m\u00e9moisation de fonction est une optimisation classique qui permet de ne calculer qu'une fois une fonction appel\u00e9e de fa\u00e7on r\u00e9p\u00e9t\u00e9e.\nCette pr\u00e9sentation essaie d'aller plus loin : ne jamais calculer la fonction \u00e0 l'execution et n'utiliser qu'une gigantesque lookup table \u00e0 la place.\nEt comme c'est en Python, le tout en quelques centaines de lignes de code !", "title": "Plus loin que la m\u00e9moization : la tabulation", "abstract": "La m\u00e9moisation de fonction est une optimisation bien connue qui permet de ne calculer qu'une fois une fonction sans effet de bord pour chaque nouvelle combinaison de param\u00e8tre. Depuis python 3.2, cette optimisation est disponible dans la biblioth\u00e8que standard Python sous la forme du d\u00e9corateur functools.lru_cache.\nMais voil\u00e0, il faut quand m\u00eame calculer la fonction au moins une fois pour chaque nouvelle combinaison de param\u00e8tres, et \u00e7a peut prendre du temps.\nDans cette pr\u00e9sentation, on va adopter une mesure encore plus extr\u00e8me : calculer toutes les valeurs de la fonction pour toutes les entr\u00e9es. Oui, remplacer un appel de fonction par un (simple) acc\u00e8s m\u00e9moire. Ou presque.\nOn verra que c'est parfois possible, m\u00eame quand le domaine d'entr\u00e9e est grand, que \u00e7a peut aller vite, et que cela a m\u00eame des applications en s\u00e9curit\u00e9 informatique pour le moins inattendues...", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>La m\u00e9moisation de fonction est une optimisation classique qui permet de ne calculer qu'une fois une fonction appel\u00e9e de fa\u00e7on r\u00e9p\u00e9t\u00e9e.</p>\n<p>Cette pr\u00e9sentation essaie d'aller plus loin : ne jamais calculer la fonction \u00e0 l'execution et n'utiliser qu'une gigantesque lookup table \u00e0 la place.</p>\n<p>Et comme c'est en Python, le tout en quelques centaines de lignes de code !</p></div>", "abstract_md": "<div class=\"abstract\"><p>La m\u00e9moisation de fonction est une optimisation bien connue qui permet de ne calculer qu'une fois une fonction sans effet de bord pour chaque nouvelle combinaison de param\u00e8tre. Depuis python 3.2, cette optimisation est disponible dans la biblioth\u00e8que standard Python sous la forme du d\u00e9corateur <code>functools.lru_cache</code>.</p>\n<p>Mais voil\u00e0, il faut quand m\u00eame calculer la fonction au moins une fois pour chaque nouvelle combinaison de param\u00e8tres, et \u00e7a peut prendre du temps.</p>\n<p>Dans cette pr\u00e9sentation, on va adopter une mesure encore plus extr\u00e8me : calculer toutes les valeurs de la fonction pour toutes les entr\u00e9es. Oui, remplacer un appel de fonction par un (simple) acc\u00e8s m\u00e9moire. Ou presque.</p>\n<p>On verra que c'est parfois possible, m\u00eame quand le domaine d'entr\u00e9e est grand, que \u00e7a peut aller vite, et que cela a m\u00eame des applications en s\u00e9curit\u00e9 informatique pour le moins inattendues...</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Arthur Vuillard"], "description": "La gestion des d\u00e9pendances n'est pas une t\u00e2che tr\u00e8s plaisante : on se met souvent sur une version d'une d\u00e9pendance sans plus jamais en changer. Cette pratique peut amener \u00e0 des probl\u00e8mes de maintenance et de s\u00e9curit\u00e9. Au cours de cette pr\u00e9sentation je vais pr\u00e9senter comment g\u00e9rer ses d\u00e9pendances correctement dans un projet Python.", "title": "Gestion de ses d\u00e9pendances", "abstract": "", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>La gestion des d\u00e9pendances n'est pas une t\u00e2che tr\u00e8s plaisante : on se met souvent sur une version d'une d\u00e9pendance sans plus jamais en changer. Cette pratique peut amener \u00e0 des probl\u00e8mes de maintenance et de s\u00e9curit\u00e9. Au cours de cette pr\u00e9sentation je vais pr\u00e9senter comment g\u00e9rer ses d\u00e9pendances correctement dans un projet Python.</p></div>", "abstract_md": "<div class=\"abstract\"></div>", "audience_level": "Intermediate"},
{"speakers": ["Boris FELD"], "description": "Migration d'une librairie de communication r\u00e9seau depuis Tornado (python2.7) vers Asyncio (python3.4)", "title": "from Sync to to Async Python, a AsyncIO migration", "abstract": "Pr\u00e9sentation de la migration de ZeroServices (https://github.com/Lothiraldan/ZeroServices) depuis Tornado en python2 vers Tornado en python3.4 en passant par une version synchrone en python3.\nPr\u00e9sentation des raisons de chacun de ces changements, les challenges qu'ils ont repr\u00e9sent\u00e9, les compromis faits et les points positifs de ces changements et les \u00e9volutions dans le design.\nUn gros focus sera mis sur l'int\u00e9r\u00eat d'asyncio dans une application r\u00e9seau, l'int\u00e9r\u00eat de l'unicode partout en python3 et sur comment tester une application asynchrone en asyncio.", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Migration d'une librairie de communication r\u00e9seau depuis Tornado (python2.7) vers Asyncio (python3.4)</p></div>", "abstract_md": "<div class=\"abstract\"><p>Pr\u00e9sentation de la migration de ZeroServices (https://github.com/Lothiraldan/ZeroServices) depuis Tornado en python2 vers Tornado en python3.4 en passant par une version synchrone en python3.</p>\n<p>Pr\u00e9sentation des raisons de chacun de ces changements, les challenges qu'ils ont repr\u00e9sent\u00e9, les compromis faits et les points positifs de ces changements et les \u00e9volutions dans le design.</p>\n<p>Un gros focus sera mis sur l'int\u00e9r\u00eat d'asyncio dans une application r\u00e9seau, l'int\u00e9r\u00eat de l'unicode partout en python3 et sur comment tester une application asynchrone en asyncio.</p></div>", "audience_level": "Experienced"},
{"speakers": ["Olivier Andr\u00e9"], "description": "Bokor est un logiciel libre (GPL v3) d\u00e9velopp\u00e9 par la SCOP Bearstech en partenariat avec la soci\u00e9t\u00e9 de distribution de films Cinego. Bokor est un framework permettant la distribution de fichiers sur un parc h\u00e9t\u00e9rog\u00e8ne de machines. L'architecture est hybride, un ma\u00eetre coordonne un ensemble d'esclaves qui vont partager des fichiers en point \u00e0 point, avec le protocole BitTorrent.", "title": "Bokor: distribution de films en BitTorrent et hacking python", "abstract": "Bokor est un logiciel libre (GPL v3) d\u00e9velopp\u00e9 par la SCOP Bearstech en partenariat avec la soci\u00e9t\u00e9 de distribution de films Cinego. Bokor est un framework permettant la distribution de fichiers sur un parc h\u00e9t\u00e9rog\u00e8ne de machines. L'architecture est hybride, un ma\u00eetre coordonne un ensemble d'esclaves qui vont partager des fichiers en point \u00e0 point, avec le protocole BitTorrent. Pour le distributeur, la bande passante est optimis\u00e9e, et la r\u00e9siliance du syst\u00e8me maitris\u00e9e. La participation autoritaire aux \u00e9changes BitTorrent garantie des latences optimis\u00e9es. Il est en production avec aujourd'hui 400 cin\u00e9mas connect\u00e9s, 10 super seeders en datacenter et 400 films, bandes-annonces et courts-m\u00e9trages partag\u00e9s.\nBokor utilise Rtorrent (avec des corrections pour Cygwin) et OpenTracker (avec quelques patchs), pour la partie BitTorrent. Pour la partie coordination, Python est utilis\u00e9, essentiellement pour des appels de fonctions dynamiques. Nous allons vous pr\u00e9senter la partie \"Appel de proc\u00e9dure distante\" (RPC en VO) de Bokor. Le syst\u00e8me de RPC de Bokor a d\u00fb \u00eatre con\u00e7u de mani\u00e8re extensible, la liste des fonctionnalit\u00e9s requises n'\u00e9tant pas connue \u00e0 l'avance. Nous avons choisi une approche minimaliste, pour ne pas avoir de soucis de portabilit\u00e9, et pour limiter au maximum la consommation en CPU et bande-passante, qui seront utilis\u00e9s par les tr\u00e8s gourmands \u00e9changes BitTorrent.\nL'utilisation des biblioth\u00e8ques tiers a \u00e9t\u00e9 r\u00e9duite au maximum, seul py-curl a surv\u00e9cu, pr\u00e9f\u00e9rant l'approche \"fourni avec des piles\" de Python. Par contre, l'introspection de python a \u00e9t\u00e9 pouss\u00e9e dans ces derniers retranchements : d\u00e9corateurs de classes, de fonctions, modifications \u00e0 chaud de classes, d'objets, m\u00e9thodes abstraites...", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Bokor est un logiciel libre (GPL v3) d\u00e9velopp\u00e9 par la SCOP Bearstech en partenariat avec la soci\u00e9t\u00e9 de distribution de films Cinego. Bokor est un framework permettant la distribution de fichiers sur un parc h\u00e9t\u00e9rog\u00e8ne de machines. L'architecture est hybride, un ma\u00eetre coordonne un ensemble d'esclaves qui vont partager des fichiers en point \u00e0 point, avec le protocole BitTorrent.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Bokor est un logiciel libre (GPL v3) d\u00e9velopp\u00e9 par la SCOP Bearstech en partenariat avec la soci\u00e9t\u00e9 de distribution de films Cinego. Bokor est un framework permettant la distribution de fichiers sur un parc h\u00e9t\u00e9rog\u00e8ne de machines. L'architecture est hybride, un ma\u00eetre coordonne un ensemble d'esclaves qui vont partager des fichiers en point \u00e0 point, avec le protocole BitTorrent. Pour le distributeur, la bande passante est optimis\u00e9e, et la r\u00e9siliance du syst\u00e8me maitris\u00e9e. La participation autoritaire aux \u00e9changes BitTorrent garantie des latences optimis\u00e9es. Il est en production avec aujourd'hui 400 cin\u00e9mas connect\u00e9s, 10 super seeders en datacenter et 400 films, bandes-annonces et courts-m\u00e9trages partag\u00e9s.</p>\n<p>Bokor utilise Rtorrent (avec des corrections pour Cygwin) et OpenTracker (avec quelques patchs), pour la partie BitTorrent. Pour la partie coordination, Python est utilis\u00e9, essentiellement pour des appels de fonctions dynamiques. Nous allons vous pr\u00e9senter la partie \"Appel de proc\u00e9dure distante\" (RPC en VO) de Bokor. Le syst\u00e8me de RPC de Bokor a d\u00fb \u00eatre con\u00e7u de mani\u00e8re extensible, la liste des fonctionnalit\u00e9s requises n'\u00e9tant pas connue \u00e0 l'avance. Nous avons choisi une approche minimaliste, pour ne pas avoir de soucis de portabilit\u00e9, et pour limiter au maximum la consommation en CPU et bande-passante, qui seront utilis\u00e9s par les tr\u00e8s gourmands \u00e9changes BitTorrent.</p>\n<p>L'utilisation des biblioth\u00e8ques tiers a \u00e9t\u00e9 r\u00e9duite au maximum, seul py-curl a surv\u00e9cu, pr\u00e9f\u00e9rant l'approche \"fourni avec des piles\" de Python. Par contre, l'introspection de python a \u00e9t\u00e9 pouss\u00e9e dans ces derniers retranchements : d\u00e9corateurs de classes, de fonctions, modifications \u00e0 chaud de classes, d'objets, m\u00e9thodes abstraites...</p></div>", "audience_level": "Experienced"},
{"speakers": ["Mike BRIGHT"], "description": "IPython permet d\u2019experimenter avec Python tout en gardant trace d\u2019execution en forme de notebook.\nLargement utilise par des scientifiques pour partager, documenter leur travail de facon reproducible.  Nous allons regarder l\u2019evolution vers un outil multi-langage, Jupyter annonce en 2014.\nRegardons les capabilites de Jupyter ainsi que les evolutions et investissements dans le projet.", "title": "IPython vers Jupyter", "abstract": "Ce talk vise les debutants, ou debutants IPython/Jupyter, en tout cas.\nNous allons regarder les capabilites d\u2019IPython/Jupyter.\nDepuis 2014 projet Jupyter permet de faire differents langages en notebook, via des kernels specifiques (ils existent 49 aujourd\u2019hui, il n\u2019y avait que 45 il y a deux semaines).\nRegardons d\u2019abord les capabilites d\u2019IPython meme avec quelques examples graphiques a base de Pandas, Numpy pour l\u2019analyse de donnees.  Voyons comment Jupyter puissent utiliser sympy/MathJAX.js pour travailler avec des equations et symboles mathematiques dans un notebook.\nNous ferons des choses similaires dans d\u2019autres langages aussi utilises pour l\u2019analyze de donnees, tels que R et Julia.\nRegardons les projets autour de Jupyter et les evolutions en cours:\n javascript front ends\n integration avec Google Drive\n integration avec github\n integration avec Microsoft Azure", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>IPython permet d\u2019experimenter avec Python tout en gardant trace d\u2019execution en forme de notebook.\nLargement utilise par des scientifiques pour partager, documenter leur travail de facon reproducible.  Nous allons regarder l\u2019evolution vers un outil multi-langage, Jupyter annonce en 2014.\nRegardons les capabilites de Jupyter ainsi que les evolutions et investissements dans le projet.</p></div>", "abstract_md": "<div class=\"abstract\"><p>Ce talk vise les debutants, ou debutants IPython/Jupyter, en tout cas.</p>\n<p>Nous allons regarder les capabilites d\u2019IPython/Jupyter.\nDepuis 2014 projet Jupyter permet de faire differents langages en notebook, via des kernels specifiques (ils existent 49 aujourd\u2019hui, il n\u2019y avait que 45 il y a deux semaines).</p>\n<p>Regardons d\u2019abord les capabilites d\u2019IPython meme avec quelques examples graphiques a base de Pandas, Numpy pour l\u2019analyse de donnees.  Voyons comment Jupyter puissent utiliser sympy/MathJAX.js pour travailler avec des equations et symboles mathematiques dans un notebook.</p>\n<p>Nous ferons des choses similaires dans d\u2019autres langages aussi utilises pour l\u2019analyze de donnees, tels que R et Julia.</p>\n<p>Regardons les projets autour de Jupyter et les evolutions en cours:\n<em> javascript front ends\n</em> integration avec Google Drive\n<em> integration avec github\n</em> integration avec Microsoft Azure</p></div>", "audience_level": "Intermediate"},
{"speakers": ["Feth Arezki"], "description": "Le langage Python est taill\u00e9 pour la relecture et le code source est souvent compr\u00e9hensible par tous\u00a0; pourtant, on y trouve des choses inconnues ou rares dans les autres langages de programmation.\nCette conf\u00e9rence fait un tour d'horizon de ce que vous savez ou devez apprendre pour coder couramment en Python (g\u00e9n\u00e9rateurs, propri\u00e9t\u00e9s, coroutines etc).", "title": "Inventaire des sp\u00e9cificit\u00e9s de Python", "abstract": "On peut visiter le Louvre en deux heures et Python en 20 minutes\nCeux qui ont appris \u00e0 programmer en Python n'ont pas n\u00e9cessairement conscience de la masse de connaissance acquise au fil des mois ou des ann\u00e9es. Cet expos\u00e9 propose un tour rapide (un point par minute) de ce qui fait que Python est un langage qui permet une programmation efficace, expressive et lisible.\nLe sommaire\nContiendra une liste (non exhaustive) des points abord\u00e9s (eux-m\u00eame non exhaustifs) :\n\nd\u00e9corateurs\npropri\u00e9t\u00e9s\ng\u00e9n\u00e9rateurs\nobjets (oui, c'est quoi un objet, une classe ?)\nm\u00e9taclasses\nasync, await...\nd\u00e9clarations d'encodage\n...\n\nL'auteur n'est pas responsable d'une mauvaise utilisation des tournures du langage qu'il aura pr\u00e9sent\u00e9, il cherche \u00e0 faire prendre conscience de l'ensemble des organes de cet animal unique, et en creux de ce qui le diff\u00e9rencie de ses cousins (C, shell, Java etc).", "date": "2015-10-17 00:00:00", "description_md": "<div class=\"description\"><p>Le langage Python est taill\u00e9 pour la relecture et le code source est souvent compr\u00e9hensible par tous\u00a0; pourtant, on y trouve des choses inconnues ou rares dans les autres langages de programmation.</p>\n<p>Cette conf\u00e9rence fait un tour d'horizon de ce que vous savez ou devez apprendre pour coder couramment en Python (g\u00e9n\u00e9rateurs, propri\u00e9t\u00e9s, coroutines etc).</p></div>", "abstract_md": "<div class=\"abstract\"><h1>On peut visiter le Louvre en deux heures et Python en 20 minutes</h1>\n<p>Ceux qui ont appris \u00e0 programmer en Python n'ont pas n\u00e9cessairement conscience de la masse de connaissance acquise au fil des mois ou des ann\u00e9es. Cet expos\u00e9 propose un tour rapide (un point par minute) de ce qui fait que Python est un langage qui permet une programmation efficace, expressive et lisible.</p>\n<h2>Le sommaire</h2>\n<p>Contiendra une liste (non exhaustive) des points abord\u00e9s (eux-m\u00eame non exhaustifs) :</p>\n<ul>\n<li>d\u00e9corateurs</li>\n<li>propri\u00e9t\u00e9s</li>\n<li>g\u00e9n\u00e9rateurs</li>\n<li>objets (oui, c'est quoi un objet, une classe ?)</li>\n<li>m\u00e9taclasses</li>\n<li>async, await...</li>\n<li>d\u00e9clarations d'encodage</li>\n<li>...</li>\n</ul>\n<p>L'auteur n'est pas responsable d'une mauvaise utilisation des tournures du langage qu'il aura pr\u00e9sent\u00e9, il cherche \u00e0 faire prendre conscience de l'ensemble des organes de cet animal unique, et en creux de ce qui le diff\u00e9rencie de ses cousins (C, shell, Java etc).</p></div>", "audience_level": "Novice"}]